{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\n\nvar __commonJS = (callback, module2) => () => {\n  if (!module2) {\n    module2 = {\n      exports: {}\n    };\n    callback(module2.exports, module2);\n  }\n\n  return module2.exports;\n};\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __exportStar = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n};\n\nvar __toModule = module2 => {\n  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {\n    get: () => module2.default,\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n}; // ../../node_modules/.pnpm/decimal.js@10.2.1/node_modules/decimal.js/decimal.js\n\n\nvar require_decimal = __commonJS((exports2, module2) => {\n  (function (globalScope) {\n    \"use strict\";\n\n    var EXP_LIMIT = 9e15,\n        MAX_DIGITS = 1e9,\n        NUMERALS = \"0123456789abcdef\",\n        LN10 = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",\n        PI = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",\n        DEFAULTS = {\n      precision: 20,\n      rounding: 4,\n      modulo: 1,\n      toExpNeg: -7,\n      toExpPos: 21,\n      minE: -EXP_LIMIT,\n      maxE: EXP_LIMIT,\n      crypto: false\n    },\n        Decimal,\n        inexact,\n        noConflict,\n        quadrant,\n        external = true,\n        decimalError = \"[DecimalError] \",\n        invalidArgument = decimalError + \"Invalid argument: \",\n        precisionLimitExceeded = decimalError + \"Precision limit exceeded\",\n        cryptoUnavailable = decimalError + \"crypto unavailable\",\n        mathfloor = Math.floor,\n        mathpow = Math.pow,\n        isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n        isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n        isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n        isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n        BASE = 1e7,\n        LOG_BASE = 7,\n        MAX_SAFE_INTEGER = 9007199254740991,\n        LN10_PRECISION = LN10.length - 1,\n        PI_PRECISION = PI.length - 1,\n        P = {\n      name: \"[object Decimal]\"\n    };\n\n    P.absoluteValue = P.abs = function () {\n      var x = new this.constructor(this);\n      if (x.s < 0) x.s = 1;\n      return finalise(x);\n    };\n\n    P.ceil = function () {\n      return finalise(new this.constructor(this), this.e + 1, 2);\n    };\n\n    P.comparedTo = P.cmp = function (y) {\n      var i,\n          j,\n          xdL,\n          ydL,\n          x = this,\n          xd = x.d,\n          yd = (y = new x.constructor(y)).d,\n          xs = x.s,\n          ys = y.s;\n\n      if (!xd || !yd) {\n        return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n      }\n\n      if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\n      if (xs !== ys) return xs;\n      if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\n      xdL = xd.length;\n      ydL = yd.length;\n\n      for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n        if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n      }\n\n      return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n    };\n\n    P.cosine = P.cos = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.d) return new Ctor(NaN);\n      if (!x.d[0]) return new Ctor(1);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n      x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n    };\n\n    P.cubeRoot = P.cbrt = function () {\n      var e,\n          m,\n          n,\n          r,\n          rep,\n          s,\n          sd,\n          t,\n          t3,\n          t3plusx,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n      external = false;\n      s = x.s * mathpow(x.s * x, 1 / 3);\n\n      if (!s || Math.abs(s) == 1 / 0) {\n        n = digitsToString(x.d);\n        e = x.e;\n        if (s = (e - n.length + 1) % 3) n += s == 1 || s == -2 ? \"0\" : \"00\";\n        s = mathpow(n, 1 / 3);\n        e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n\n        if (s == 1 / 0) {\n          n = \"5e\" + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n        }\n\n        r = new Ctor(n);\n        r.s = x.s;\n      } else {\n        r = new Ctor(s.toString());\n      }\n\n      sd = (e = Ctor.precision) + 3;\n\n      for (;;) {\n        t = r;\n        t3 = t.times(t).times(t);\n        t3plusx = t3.plus(x);\n        r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n\n          if (n == \"9999\" || !rep && n == \"4999\") {\n            if (!rep) {\n              finalise(t, e + 1, 0);\n\n              if (t.times(t).times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n\n            sd += 4;\n            rep = 1;\n          } else {\n            if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n              finalise(r, e + 1, 1);\n              m = !r.times(r).times(r).eq(x);\n            }\n\n            break;\n          }\n        }\n      }\n\n      external = true;\n      return finalise(r, e, Ctor.rounding, m);\n    };\n\n    P.decimalPlaces = P.dp = function () {\n      var w,\n          d = this.d,\n          n = NaN;\n\n      if (d) {\n        w = d.length - 1;\n        n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n        w = d[w];\n        if (w) for (; w % 10 == 0; w /= 10) n--;\n        if (n < 0) n = 0;\n      }\n\n      return n;\n    };\n\n    P.dividedBy = P.div = function (y) {\n      return divide(this, new this.constructor(y));\n    };\n\n    P.dividedToIntegerBy = P.divToInt = function (y) {\n      var x = this,\n          Ctor = x.constructor;\n      return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n    };\n\n    P.equals = P.eq = function (y) {\n      return this.cmp(y) === 0;\n    };\n\n    P.floor = function () {\n      return finalise(new this.constructor(this), this.e + 1, 3);\n    };\n\n    P.greaterThan = P.gt = function (y) {\n      return this.cmp(y) > 0;\n    };\n\n    P.greaterThanOrEqualTo = P.gte = function (y) {\n      var k = this.cmp(y);\n      return k == 1 || k === 0;\n    };\n\n    P.hyperbolicCosine = P.cosh = function () {\n      var k,\n          n,\n          pr,\n          rm,\n          len,\n          x = this,\n          Ctor = x.constructor,\n          one = new Ctor(1);\n      if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\n      if (x.isZero()) return one;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        n = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        n = \"2.3283064365386962890625e-10\";\n      }\n\n      x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n      var cosh2_x,\n          i = k,\n          d8 = new Ctor(8);\n\n      for (; i--;) {\n        cosh2_x = x.times(x);\n        x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n      }\n\n      return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n\n    P.hyperbolicSine = P.sinh = function () {\n      var k,\n          pr,\n          rm,\n          len,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n\n      if (len < 3) {\n        x = taylorSeries(Ctor, 2, x, x, true);\n      } else {\n        k = 1.4 * Math.sqrt(len);\n        k = k > 16 ? 16 : k | 0;\n        x = x.times(1 / tinyPow(5, k));\n        x = taylorSeries(Ctor, 2, x, x, true);\n        var sinh2_x,\n            d5 = new Ctor(5),\n            d16 = new Ctor(16),\n            d20 = new Ctor(20);\n\n        for (; k--;) {\n          sinh2_x = x.times(x);\n          x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n        }\n      }\n\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(x, pr, rm, true);\n    };\n\n    P.hyperbolicTangent = P.tanh = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite()) return new Ctor(x.s);\n      if (x.isZero()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 7;\n      Ctor.rounding = 1;\n      return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n    };\n\n    P.inverseCosine = P.acos = function () {\n      var halfPi,\n          x = this,\n          Ctor = x.constructor,\n          k = x.abs().cmp(1),\n          pr = Ctor.precision,\n          rm = Ctor.rounding;\n\n      if (k !== -1) {\n        return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);\n      }\n\n      if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n      x = x.asin();\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return halfPi.minus(x);\n    };\n\n    P.inverseHyperbolicCosine = P.acosh = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\n      if (!x.isFinite()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n      Ctor.rounding = 1;\n      external = false;\n      x = x.times(x).minus(1).sqrt().plus(x);\n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.ln();\n    };\n\n    P.inverseHyperbolicSine = P.asinh = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n      Ctor.rounding = 1;\n      external = false;\n      x = x.times(x).plus(1).sqrt().plus(x);\n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.ln();\n    };\n\n    P.inverseHyperbolicTangent = P.atanh = function () {\n      var pr,\n          rm,\n          wpr,\n          xsd,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      xsd = x.sd();\n      if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\n      Ctor.precision = wpr = xsd - x.e;\n      x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n      Ctor.precision = pr + 4;\n      Ctor.rounding = 1;\n      x = x.ln();\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.times(0.5);\n    };\n\n    P.inverseSine = P.asin = function () {\n      var halfPi,\n          k,\n          pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (x.isZero()) return new Ctor(x);\n      k = x.abs().cmp(1);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n\n      if (k !== -1) {\n        if (k === 0) {\n          halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n          halfPi.s = x.s;\n          return halfPi;\n        }\n\n        return new Ctor(NaN);\n      }\n\n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n      x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.times(2);\n    };\n\n    P.inverseTangent = P.atan = function () {\n      var i,\n          j,\n          k,\n          n,\n          px,\n          t,\n          r,\n          wpr,\n          x2,\n          x = this,\n          Ctor = x.constructor,\n          pr = Ctor.precision,\n          rm = Ctor.rounding;\n\n      if (!x.isFinite()) {\n        if (!x.s) return new Ctor(NaN);\n\n        if (pr + 4 <= PI_PRECISION) {\n          r = getPi(Ctor, pr + 4, rm).times(0.5);\n          r.s = x.s;\n          return r;\n        }\n      } else if (x.isZero()) {\n        return new Ctor(x);\n      } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n        r = getPi(Ctor, pr + 4, rm).times(0.25);\n        r.s = x.s;\n        return r;\n      }\n\n      Ctor.precision = wpr = pr + 10;\n      Ctor.rounding = 1;\n      k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n\n      for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\n\n      external = false;\n      j = Math.ceil(wpr / LOG_BASE);\n      n = 1;\n      x2 = x.times(x);\n      r = new Ctor(x);\n      px = x;\n\n      for (; i !== -1;) {\n        px = px.times(x2);\n        t = r.minus(px.div(n += 2));\n        px = px.times(x2);\n        r = t.plus(px.div(n += 2));\n        if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\n      }\n\n      if (k) r = r.times(2 << k - 1);\n      external = true;\n      return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n\n    P.isFinite = function () {\n      return !!this.d;\n    };\n\n    P.isInteger = P.isInt = function () {\n      return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n    };\n\n    P.isNaN = function () {\n      return !this.s;\n    };\n\n    P.isNegative = P.isNeg = function () {\n      return this.s < 0;\n    };\n\n    P.isPositive = P.isPos = function () {\n      return this.s > 0;\n    };\n\n    P.isZero = function () {\n      return !!this.d && this.d[0] === 0;\n    };\n\n    P.lessThan = P.lt = function (y) {\n      return this.cmp(y) < 0;\n    };\n\n    P.lessThanOrEqualTo = P.lte = function (y) {\n      return this.cmp(y) < 1;\n    };\n\n    P.logarithm = P.log = function (base) {\n      var isBase10,\n          d,\n          denominator,\n          k,\n          inf,\n          num,\n          sd,\n          r,\n          arg = this,\n          Ctor = arg.constructor,\n          pr = Ctor.precision,\n          rm = Ctor.rounding,\n          guard = 5;\n\n      if (base == null) {\n        base = new Ctor(10);\n        isBase10 = true;\n      } else {\n        base = new Ctor(base);\n        d = base.d;\n        if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\n        isBase10 = base.eq(10);\n      }\n\n      d = arg.d;\n\n      if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n        return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n      }\n\n      if (isBase10) {\n        if (d.length > 1) {\n          inf = true;\n        } else {\n          for (k = d[0]; k % 10 === 0;) k /= 10;\n\n          inf = k !== 1;\n        }\n      }\n\n      external = false;\n      sd = pr + guard;\n      num = naturalLogarithm(arg, sd);\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n      r = divide(num, denominator, sd, 1);\n\n      if (checkRoundingDigits(r.d, k = pr, rm)) {\n        do {\n          sd += 10;\n          num = naturalLogarithm(arg, sd);\n          denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n          r = divide(num, denominator, sd, 1);\n\n          if (!inf) {\n            if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n              r = finalise(r, pr + 1, 0);\n            }\n\n            break;\n          }\n        } while (checkRoundingDigits(r.d, k += 10, rm));\n      }\n\n      external = true;\n      return finalise(r, pr, rm);\n    };\n\n    P.minus = P.sub = function (y) {\n      var d,\n          e,\n          i,\n          j,\n          k,\n          len,\n          pr,\n          rm,\n          xd,\n          xe,\n          xLTy,\n          yd,\n          x = this,\n          Ctor = x.constructor;\n      y = new Ctor(y);\n\n      if (!x.d || !y.d) {\n        if (!x.s || !y.s) y = new Ctor(NaN);else if (x.d) y.s = -y.s;else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n        return y;\n      }\n\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.plus(y);\n      }\n\n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n\n      if (!xd[0] || !yd[0]) {\n        if (yd[0]) y.s = -y.s;else if (xd[0]) y = new Ctor(x);else return new Ctor(rm === 3 ? -0 : 0);\n        return external ? finalise(y, pr, rm) : y;\n      }\n\n      e = mathfloor(y.e / LOG_BASE);\n      xe = mathfloor(x.e / LOG_BASE);\n      xd = xd.slice();\n      k = xe - e;\n\n      if (k) {\n        xLTy = k < 0;\n\n        if (xLTy) {\n          d = xd;\n          k = -k;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = xe;\n          len = xd.length;\n        }\n\n        i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n\n        if (k > i) {\n          k = i;\n          d.length = 1;\n        }\n\n        d.reverse();\n\n        for (i = k; i--;) d.push(0);\n\n        d.reverse();\n      } else {\n        i = xd.length;\n        len = yd.length;\n        xLTy = i < len;\n        if (xLTy) len = i;\n\n        for (i = 0; i < len; i++) {\n          if (xd[i] != yd[i]) {\n            xLTy = xd[i] < yd[i];\n            break;\n          }\n        }\n\n        k = 0;\n      }\n\n      if (xLTy) {\n        d = xd;\n        xd = yd;\n        yd = d;\n        y.s = -y.s;\n      }\n\n      len = xd.length;\n\n      for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\n\n      for (i = yd.length; i > k;) {\n        if (xd[--i] < yd[i]) {\n          for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\n\n          --xd[j];\n          xd[i] += BASE;\n        }\n\n        xd[i] -= yd[i];\n      }\n\n      for (; xd[--len] === 0;) xd.pop();\n\n      for (; xd[0] === 0; xd.shift()) --e;\n\n      if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n      return external ? finalise(y, pr, rm) : y;\n    };\n\n    P.modulo = P.mod = function (y) {\n      var q,\n          x = this,\n          Ctor = x.constructor;\n      y = new Ctor(y);\n      if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\n\n      if (!y.d || x.d && !x.d[0]) {\n        return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n      }\n\n      external = false;\n\n      if (Ctor.modulo == 9) {\n        q = divide(x, y.abs(), 0, 3, 1);\n        q.s *= y.s;\n      } else {\n        q = divide(x, y, 0, Ctor.modulo, 1);\n      }\n\n      q = q.times(y);\n      external = true;\n      return x.minus(q);\n    };\n\n    P.naturalExponential = P.exp = function () {\n      return naturalExponential(this);\n    };\n\n    P.naturalLogarithm = P.ln = function () {\n      return naturalLogarithm(this);\n    };\n\n    P.negated = P.neg = function () {\n      var x = new this.constructor(this);\n      x.s = -x.s;\n      return finalise(x);\n    };\n\n    P.plus = P.add = function (y) {\n      var carry,\n          d,\n          e,\n          i,\n          k,\n          len,\n          pr,\n          rm,\n          xd,\n          yd,\n          x = this,\n          Ctor = x.constructor;\n      y = new Ctor(y);\n\n      if (!x.d || !y.d) {\n        if (!x.s || !y.s) y = new Ctor(NaN);else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\n        return y;\n      }\n\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n      }\n\n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n\n      if (!xd[0] || !yd[0]) {\n        if (!yd[0]) y = new Ctor(x);\n        return external ? finalise(y, pr, rm) : y;\n      }\n\n      k = mathfloor(x.e / LOG_BASE);\n      e = mathfloor(y.e / LOG_BASE);\n      xd = xd.slice();\n      i = k - e;\n\n      if (i) {\n        if (i < 0) {\n          d = xd;\n          i = -i;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = k;\n          len = xd.length;\n        }\n\n        k = Math.ceil(pr / LOG_BASE);\n        len = k > len ? k + 1 : len + 1;\n\n        if (i > len) {\n          i = len;\n          d.length = 1;\n        }\n\n        d.reverse();\n\n        for (; i--;) d.push(0);\n\n        d.reverse();\n      }\n\n      len = xd.length;\n      i = yd.length;\n\n      if (len - i < 0) {\n        i = len;\n        d = yd;\n        yd = xd;\n        xd = d;\n      }\n\n      for (carry = 0; i;) {\n        carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n        xd[i] %= BASE;\n      }\n\n      if (carry) {\n        xd.unshift(carry);\n        ++e;\n      }\n\n      for (len = xd.length; xd[--len] == 0;) xd.pop();\n\n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n      return external ? finalise(y, pr, rm) : y;\n    };\n\n    P.precision = P.sd = function (z) {\n      var k,\n          x = this;\n      if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\n\n      if (x.d) {\n        k = getPrecision(x.d);\n        if (z && x.e + 1 > k) k = x.e + 1;\n      } else {\n        k = NaN;\n      }\n\n      return k;\n    };\n\n    P.round = function () {\n      var x = this,\n          Ctor = x.constructor;\n      return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n    };\n\n    P.sine = P.sin = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.isZero()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n      x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n    };\n\n    P.squareRoot = P.sqrt = function () {\n      var m,\n          n,\n          sd,\n          r,\n          rep,\n          t,\n          x = this,\n          d = x.d,\n          e = x.e,\n          s = x.s,\n          Ctor = x.constructor;\n\n      if (s !== 1 || !d || !d[0]) {\n        return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n      }\n\n      external = false;\n      s = Math.sqrt(+x);\n\n      if (s == 0 || s == 1 / 0) {\n        n = digitsToString(d);\n        if ((n.length + e) % 2 == 0) n += \"0\";\n        s = Math.sqrt(n);\n        e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n\n        if (s == 1 / 0) {\n          n = \"5e\" + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n        }\n\n        r = new Ctor(n);\n      } else {\n        r = new Ctor(s.toString());\n      }\n\n      sd = (e = Ctor.precision) + 3;\n\n      for (;;) {\n        t = r;\n        r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n\n          if (n == \"9999\" || !rep && n == \"4999\") {\n            if (!rep) {\n              finalise(t, e + 1, 0);\n\n              if (t.times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n\n            sd += 4;\n            rep = 1;\n          } else {\n            if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n              finalise(r, e + 1, 1);\n              m = !r.times(r).eq(x);\n            }\n\n            break;\n          }\n        }\n      }\n\n      external = true;\n      return finalise(r, e, Ctor.rounding, m);\n    };\n\n    P.tangent = P.tan = function () {\n      var pr,\n          rm,\n          x = this,\n          Ctor = x.constructor;\n      if (!x.isFinite()) return new Ctor(NaN);\n      if (x.isZero()) return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 10;\n      Ctor.rounding = 1;\n      x = x.sin();\n      x.s = 1;\n      x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n    };\n\n    P.times = P.mul = function (y) {\n      var carry,\n          e,\n          i,\n          k,\n          r,\n          rL,\n          t,\n          xdL,\n          ydL,\n          x = this,\n          Ctor = x.constructor,\n          xd = x.d,\n          yd = (y = new Ctor(y)).d;\n      y.s *= x.s;\n\n      if (!xd || !xd[0] || !yd || !yd[0]) {\n        return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);\n      }\n\n      e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n      xdL = xd.length;\n      ydL = yd.length;\n\n      if (xdL < ydL) {\n        r = xd;\n        xd = yd;\n        yd = r;\n        rL = xdL;\n        xdL = ydL;\n        ydL = rL;\n      }\n\n      r = [];\n      rL = xdL + ydL;\n\n      for (i = rL; i--;) r.push(0);\n\n      for (i = ydL; --i >= 0;) {\n        carry = 0;\n\n        for (k = xdL + i; k > i;) {\n          t = r[k] + yd[i] * xd[k - i - 1] + carry;\n          r[k--] = t % BASE | 0;\n          carry = t / BASE | 0;\n        }\n\n        r[k] = (r[k] + carry) % BASE | 0;\n      }\n\n      for (; !r[--rL];) r.pop();\n\n      if (carry) ++e;else r.shift();\n      y.d = r;\n      y.e = getBase10Exponent(r, e);\n      return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n    };\n\n    P.toBinary = function (sd, rm) {\n      return toStringBinary(this, 2, sd, rm);\n    };\n\n    P.toDecimalPlaces = P.toDP = function (dp, rm) {\n      var x = this,\n          Ctor = x.constructor;\n      x = new Ctor(x);\n      if (dp === void 0) return x;\n      checkInt32(dp, 0, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      return finalise(x, dp + x.e + 1, rm);\n    };\n\n    P.toExponential = function (dp, rm) {\n      var str,\n          x = this,\n          Ctor = x.constructor;\n\n      if (dp === void 0) {\n        str = finiteToString(x, true);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n        x = finalise(new Ctor(x), dp + 1, rm);\n        str = finiteToString(x, true, dp + 1);\n      }\n\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n\n    P.toFixed = function (dp, rm) {\n      var str,\n          y,\n          x = this,\n          Ctor = x.constructor;\n\n      if (dp === void 0) {\n        str = finiteToString(x);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n        y = finalise(new Ctor(x), dp + x.e + 1, rm);\n        str = finiteToString(y, false, dp + y.e + 1);\n      }\n\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n\n    P.toFraction = function (maxD) {\n      var d,\n          d0,\n          d1,\n          d2,\n          e,\n          k,\n          n,\n          n0,\n          n1,\n          pr,\n          q,\n          r,\n          x = this,\n          xd = x.d,\n          Ctor = x.constructor;\n      if (!xd) return new Ctor(x);\n      n1 = d0 = new Ctor(1);\n      d1 = n0 = new Ctor(0);\n      d = new Ctor(d1);\n      e = d.e = getPrecision(xd) - x.e - 1;\n      k = e % LOG_BASE;\n      d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n\n      if (maxD == null) {\n        maxD = e > 0 ? d : n1;\n      } else {\n        n = new Ctor(maxD);\n        if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\n        maxD = n.gt(d) ? e > 0 ? d : n1 : n;\n      }\n\n      external = false;\n      n = new Ctor(digitsToString(xd));\n      pr = Ctor.precision;\n      Ctor.precision = e = xd.length * LOG_BASE * 2;\n\n      for (;;) {\n        q = divide(n, d, 0, 1, 1);\n        d2 = d0.plus(q.times(d1));\n        if (d2.cmp(maxD) == 1) break;\n        d0 = d1;\n        d1 = d2;\n        d2 = n1;\n        n1 = n0.plus(q.times(d2));\n        n0 = d2;\n        d2 = d;\n        d = n.minus(q.times(d2));\n        n = d2;\n      }\n\n      d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n      n0 = n0.plus(d2.times(n1));\n      d0 = d0.plus(d2.times(d1));\n      n0.s = n1.s = x.s;\n      r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n      Ctor.precision = pr;\n      external = true;\n      return r;\n    };\n\n    P.toHexadecimal = P.toHex = function (sd, rm) {\n      return toStringBinary(this, 16, sd, rm);\n    };\n\n    P.toNearest = function (y, rm) {\n      var x = this,\n          Ctor = x.constructor;\n      x = new Ctor(x);\n\n      if (y == null) {\n        if (!x.d) return x;\n        y = new Ctor(1);\n        rm = Ctor.rounding;\n      } else {\n        y = new Ctor(y);\n\n        if (rm === void 0) {\n          rm = Ctor.rounding;\n        } else {\n          checkInt32(rm, 0, 8);\n        }\n\n        if (!x.d) return y.s ? x : y;\n\n        if (!y.d) {\n          if (y.s) y.s = x.s;\n          return y;\n        }\n      }\n\n      if (y.d[0]) {\n        external = false;\n        x = divide(x, y, 0, rm, 1).times(y);\n        external = true;\n        finalise(x);\n      } else {\n        y.s = x.s;\n        x = y;\n      }\n\n      return x;\n    };\n\n    P.toNumber = function () {\n      return +this;\n    };\n\n    P.toOctal = function (sd, rm) {\n      return toStringBinary(this, 8, sd, rm);\n    };\n\n    P.toPower = P.pow = function (y) {\n      var e,\n          k,\n          pr,\n          r,\n          rm,\n          s,\n          x = this,\n          Ctor = x.constructor,\n          yn = +(y = new Ctor(y));\n      if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\n      x = new Ctor(x);\n      if (x.eq(1)) return x;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      if (y.eq(1)) return finalise(x, pr, rm);\n      e = mathfloor(y.e / LOG_BASE);\n\n      if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n        r = intPow(Ctor, x, k, pr);\n        return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n      }\n\n      s = x.s;\n\n      if (s < 0) {\n        if (e < y.d.length - 1) return new Ctor(NaN);\n        if ((y.d[e] & 1) == 0) s = 1;\n\n        if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n          x.s = s;\n          return x;\n        }\n      }\n\n      k = mathpow(+x, yn);\n      e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log(\"0.\" + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + \"\").e;\n      if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\n      external = false;\n      Ctor.rounding = x.s = 1;\n      k = Math.min(12, (e + \"\").length);\n      r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n\n      if (r.d) {\n        r = finalise(r, pr + 5, 1);\n\n        if (checkRoundingDigits(r.d, pr, rm)) {\n          e = pr + 10;\n          r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n\n          if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n            r = finalise(r, pr + 1, 0);\n          }\n        }\n      }\n\n      r.s = s;\n      external = true;\n      Ctor.rounding = rm;\n      return finalise(r, pr, rm);\n    };\n\n    P.toPrecision = function (sd, rm) {\n      var str,\n          x = this,\n          Ctor = x.constructor;\n\n      if (sd === void 0) {\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n        x = finalise(new Ctor(x), sd, rm);\n        str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n      }\n\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n\n    P.toSignificantDigits = P.toSD = function (sd, rm) {\n      var x = this,\n          Ctor = x.constructor;\n\n      if (sd === void 0) {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      }\n\n      return finalise(new Ctor(x), sd, rm);\n    };\n\n    P.toString = function () {\n      var x = this,\n          Ctor = x.constructor,\n          str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n\n    P.truncated = P.trunc = function () {\n      return finalise(new this.constructor(this), this.e + 1, 1);\n    };\n\n    P.valueOf = P.toJSON = function () {\n      var x = this,\n          Ctor = x.constructor,\n          str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      return x.isNeg() ? \"-\" + str : str;\n    };\n\n    function digitsToString(d) {\n      var i,\n          k,\n          ws,\n          indexOfLastWord = d.length - 1,\n          str = \"\",\n          w = d[0];\n\n      if (indexOfLastWord > 0) {\n        str += w;\n\n        for (i = 1; i < indexOfLastWord; i++) {\n          ws = d[i] + \"\";\n          k = LOG_BASE - ws.length;\n          if (k) str += getZeroString(k);\n          str += ws;\n        }\n\n        w = d[i];\n        ws = w + \"\";\n        k = LOG_BASE - ws.length;\n        if (k) str += getZeroString(k);\n      } else if (w === 0) {\n        return \"0\";\n      }\n\n      for (; w % 10 === 0;) w /= 10;\n\n      return str + w;\n    }\n\n    function checkInt32(i, min2, max2) {\n      if (i !== ~~i || i < min2 || i > max2) {\n        throw Error(invalidArgument + i);\n      }\n    }\n\n    function checkRoundingDigits(d, i, rm, repeating) {\n      var di, k, r, rd;\n\n      for (k = d[0]; k >= 10; k /= 10) --i;\n\n      if (--i < 0) {\n        i += LOG_BASE;\n        di = 0;\n      } else {\n        di = Math.ceil((i + 1) / LOG_BASE);\n        i %= LOG_BASE;\n      }\n\n      k = mathpow(10, LOG_BASE - i);\n      rd = d[di] % k | 0;\n\n      if (repeating == null) {\n        if (i < 3) {\n          if (i == 0) rd = rd / 100 | 0;else if (i == 1) rd = rd / 10 | 0;\n          r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;\n        } else {\n          r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n        }\n      } else {\n        if (i < 4) {\n          if (i == 0) rd = rd / 1e3 | 0;else if (i == 1) rd = rd / 100 | 0;else if (i == 2) rd = rd / 10 | 0;\n          r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n        } else {\n          r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;\n        }\n      }\n\n      return r;\n    }\n\n    function convertBase(str, baseIn, baseOut) {\n      var j,\n          arr = [0],\n          arrL,\n          i = 0,\n          strL = str.length;\n\n      for (; i < strL;) {\n        for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\n\n        arr[0] += NUMERALS.indexOf(str.charAt(i++));\n\n        for (j = 0; j < arr.length; j++) {\n          if (arr[j] > baseOut - 1) {\n            if (arr[j + 1] === void 0) arr[j + 1] = 0;\n            arr[j + 1] += arr[j] / baseOut | 0;\n            arr[j] %= baseOut;\n          }\n        }\n      }\n\n      return arr.reverse();\n    }\n\n    function cosine(Ctor, x) {\n      var k,\n          y,\n          len = x.d.length;\n\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        y = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        y = \"2.3283064365386962890625e-10\";\n      }\n\n      Ctor.precision += k;\n      x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n\n      for (var i = k; i--;) {\n        var cos2x = x.times(x);\n        x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n      }\n\n      Ctor.precision -= k;\n      return x;\n    }\n\n    var divide = function () {\n      function multiplyInteger(x, k, base) {\n        var temp,\n            carry = 0,\n            i = x.length;\n\n        for (x = x.slice(); i--;) {\n          temp = x[i] * k + carry;\n          x[i] = temp % base | 0;\n          carry = temp / base | 0;\n        }\n\n        if (carry) x.unshift(carry);\n        return x;\n      }\n\n      function compare(a, b, aL, bL) {\n        var i, r;\n\n        if (aL != bL) {\n          r = aL > bL ? 1 : -1;\n        } else {\n          for (i = r = 0; i < aL; i++) {\n            if (a[i] != b[i]) {\n              r = a[i] > b[i] ? 1 : -1;\n              break;\n            }\n          }\n        }\n\n        return r;\n      }\n\n      function subtract(a, b, aL, base) {\n        var i = 0;\n\n        for (; aL--;) {\n          a[aL] -= i;\n          i = a[aL] < b[aL] ? 1 : 0;\n          a[aL] = i * base + a[aL] - b[aL];\n        }\n\n        for (; !a[0] && a.length > 1;) a.shift();\n      }\n\n      return function (x, y, pr, rm, dp, base) {\n        var cmp,\n            e,\n            i,\n            k,\n            logBase,\n            more,\n            prod,\n            prodL,\n            q,\n            qd,\n            rem,\n            remL,\n            rem0,\n            sd,\n            t,\n            xi,\n            xL,\n            yd0,\n            yL,\n            yz,\n            Ctor = x.constructor,\n            sign2 = x.s == y.s ? 1 : -1,\n            xd = x.d,\n            yd = y.d;\n\n        if (!xd || !xd[0] || !yd || !yd[0]) {\n          return new Ctor(!x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0);\n        }\n\n        if (base) {\n          logBase = 1;\n          e = x.e - y.e;\n        } else {\n          base = BASE;\n          logBase = LOG_BASE;\n          e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n        }\n\n        yL = yd.length;\n        xL = xd.length;\n        q = new Ctor(sign2);\n        qd = q.d = [];\n\n        for (i = 0; yd[i] == (xd[i] || 0); i++);\n\n        if (yd[i] > (xd[i] || 0)) e--;\n\n        if (pr == null) {\n          sd = pr = Ctor.precision;\n          rm = Ctor.rounding;\n        } else if (dp) {\n          sd = pr + (x.e - y.e) + 1;\n        } else {\n          sd = pr;\n        }\n\n        if (sd < 0) {\n          qd.push(1);\n          more = true;\n        } else {\n          sd = sd / logBase + 2 | 0;\n          i = 0;\n\n          if (yL == 1) {\n            k = 0;\n            yd = yd[0];\n            sd++;\n\n            for (; (i < xL || k) && sd--; i++) {\n              t = k * base + (xd[i] || 0);\n              qd[i] = t / yd | 0;\n              k = t % yd | 0;\n            }\n\n            more = k || i < xL;\n          } else {\n            k = base / (yd[0] + 1) | 0;\n\n            if (k > 1) {\n              yd = multiplyInteger(yd, k, base);\n              xd = multiplyInteger(xd, k, base);\n              yL = yd.length;\n              xL = xd.length;\n            }\n\n            xi = yL;\n            rem = xd.slice(0, yL);\n            remL = rem.length;\n\n            for (; remL < yL;) rem[remL++] = 0;\n\n            yz = yd.slice();\n            yz.unshift(0);\n            yd0 = yd[0];\n            if (yd[1] >= base / 2) ++yd0;\n\n            do {\n              k = 0;\n              cmp = compare(yd, rem, yL, remL);\n\n              if (cmp < 0) {\n                rem0 = rem[0];\n                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\n                k = rem0 / yd0 | 0;\n\n                if (k > 1) {\n                  if (k >= base) k = base - 1;\n                  prod = multiplyInteger(yd, k, base);\n                  prodL = prod.length;\n                  remL = rem.length;\n                  cmp = compare(prod, rem, prodL, remL);\n\n                  if (cmp == 1) {\n                    k--;\n                    subtract(prod, yL < prodL ? yz : yd, prodL, base);\n                  }\n                } else {\n                  if (k == 0) cmp = k = 1;\n                  prod = yd.slice();\n                }\n\n                prodL = prod.length;\n                if (prodL < remL) prod.unshift(0);\n                subtract(rem, prod, remL, base);\n\n                if (cmp == -1) {\n                  remL = rem.length;\n                  cmp = compare(yd, rem, yL, remL);\n\n                  if (cmp < 1) {\n                    k++;\n                    subtract(rem, yL < remL ? yz : yd, remL, base);\n                  }\n                }\n\n                remL = rem.length;\n              } else if (cmp === 0) {\n                k++;\n                rem = [0];\n              }\n\n              qd[i++] = k;\n\n              if (cmp && rem[0]) {\n                rem[remL++] = xd[xi] || 0;\n              } else {\n                rem = [xd[xi]];\n                remL = 1;\n              }\n            } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n\n            more = rem[0] !== void 0;\n          }\n\n          if (!qd[0]) qd.shift();\n        }\n\n        if (logBase == 1) {\n          q.e = e;\n          inexact = more;\n        } else {\n          for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\n\n          q.e = i + e * logBase - 1;\n          finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n        }\n\n        return q;\n      };\n    }();\n\n    function finalise(x, sd, rm, isTruncated) {\n      var digits,\n          i,\n          j,\n          k,\n          rd,\n          roundUp,\n          w,\n          xd,\n          xdi,\n          Ctor = x.constructor;\n\n      out: if (sd != null) {\n        xd = x.d;\n        if (!xd) return x;\n\n        for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\n\n        i = sd - digits;\n\n        if (i < 0) {\n          i += LOG_BASE;\n          j = sd;\n          w = xd[xdi = 0];\n          rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n        } else {\n          xdi = Math.ceil((i + 1) / LOG_BASE);\n          k = xd.length;\n\n          if (xdi >= k) {\n            if (isTruncated) {\n              for (; k++ <= xdi;) xd.push(0);\n\n              w = rd = 0;\n              digits = 1;\n              i %= LOG_BASE;\n              j = i - LOG_BASE + 1;\n            } else {\n              break out;\n            }\n          } else {\n            w = k = xd[xdi];\n\n            for (digits = 1; k >= 10; k /= 10) digits++;\n\n            i %= LOG_BASE;\n            j = i - LOG_BASE + digits;\n            rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n          }\n        }\n\n        isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n        roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n\n        if (sd < 1 || !xd[0]) {\n          xd.length = 0;\n\n          if (roundUp) {\n            sd -= x.e + 1;\n            xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n            x.e = -sd || 0;\n          } else {\n            xd[0] = x.e = 0;\n          }\n\n          return x;\n        }\n\n        if (i == 0) {\n          xd.length = xdi;\n          k = 1;\n          xdi--;\n        } else {\n          xd.length = xdi + 1;\n          k = mathpow(10, LOG_BASE - i);\n          xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n        }\n\n        if (roundUp) {\n          for (;;) {\n            if (xdi == 0) {\n              for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\n\n              j = xd[0] += k;\n\n              for (k = 1; j >= 10; j /= 10) k++;\n\n              if (i != k) {\n                x.e++;\n                if (xd[0] == BASE) xd[0] = 1;\n              }\n\n              break;\n            } else {\n              xd[xdi] += k;\n              if (xd[xdi] != BASE) break;\n              xd[xdi--] = 0;\n              k = 1;\n            }\n          }\n        }\n\n        for (i = xd.length; xd[--i] === 0;) xd.pop();\n      }\n\n      if (external) {\n        if (x.e > Ctor.maxE) {\n          x.d = null;\n          x.e = NaN;\n        } else if (x.e < Ctor.minE) {\n          x.e = 0;\n          x.d = [0];\n        }\n      }\n\n      return x;\n    }\n\n    function finiteToString(x, isExp, sd) {\n      if (!x.isFinite()) return nonFiniteToString(x);\n      var k,\n          e = x.e,\n          str = digitsToString(x.d),\n          len = str.length;\n\n      if (isExp) {\n        if (sd && (k = sd - len) > 0) {\n          str = str.charAt(0) + \".\" + str.slice(1) + getZeroString(k);\n        } else if (len > 1) {\n          str = str.charAt(0) + \".\" + str.slice(1);\n        }\n\n        str = str + (x.e < 0 ? \"e\" : \"e+\") + x.e;\n      } else if (e < 0) {\n        str = \"0.\" + getZeroString(-e - 1) + str;\n        if (sd && (k = sd - len) > 0) str += getZeroString(k);\n      } else if (e >= len) {\n        str += getZeroString(e + 1 - len);\n        if (sd && (k = sd - e - 1) > 0) str = str + \".\" + getZeroString(k);\n      } else {\n        if ((k = e + 1) < len) str = str.slice(0, k) + \".\" + str.slice(k);\n\n        if (sd && (k = sd - len) > 0) {\n          if (e + 1 === len) str += \".\";\n          str += getZeroString(k);\n        }\n      }\n\n      return str;\n    }\n\n    function getBase10Exponent(digits, e) {\n      var w = digits[0];\n\n      for (e *= LOG_BASE; w >= 10; w /= 10) e++;\n\n      return e;\n    }\n\n    function getLn10(Ctor, sd, pr) {\n      if (sd > LN10_PRECISION) {\n        external = true;\n        if (pr) Ctor.precision = pr;\n        throw Error(precisionLimitExceeded);\n      }\n\n      return finalise(new Ctor(LN10), sd, 1, true);\n    }\n\n    function getPi(Ctor, sd, rm) {\n      if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\n      return finalise(new Ctor(PI), sd, rm, true);\n    }\n\n    function getPrecision(digits) {\n      var w = digits.length - 1,\n          len = w * LOG_BASE + 1;\n      w = digits[w];\n\n      if (w) {\n        for (; w % 10 == 0; w /= 10) len--;\n\n        for (w = digits[0]; w >= 10; w /= 10) len++;\n      }\n\n      return len;\n    }\n\n    function getZeroString(k) {\n      var zs = \"\";\n\n      for (; k--;) zs += \"0\";\n\n      return zs;\n    }\n\n    function intPow(Ctor, x, n, pr) {\n      var isTruncated,\n          r = new Ctor(1),\n          k = Math.ceil(pr / LOG_BASE + 4);\n      external = false;\n\n      for (;;) {\n        if (n % 2) {\n          r = r.times(x);\n          if (truncate(r.d, k)) isTruncated = true;\n        }\n\n        n = mathfloor(n / 2);\n\n        if (n === 0) {\n          n = r.d.length - 1;\n          if (isTruncated && r.d[n] === 0) ++r.d[n];\n          break;\n        }\n\n        x = x.times(x);\n        truncate(x.d, k);\n      }\n\n      external = true;\n      return r;\n    }\n\n    function isOdd(n) {\n      return n.d[n.d.length - 1] & 1;\n    }\n\n    function maxOrMin(Ctor, args, ltgt) {\n      var y,\n          x = new Ctor(args[0]),\n          i = 0;\n\n      for (; ++i < args.length;) {\n        y = new Ctor(args[i]);\n\n        if (!y.s) {\n          x = y;\n          break;\n        } else if (x[ltgt](y)) {\n          x = y;\n        }\n      }\n\n      return x;\n    }\n\n    function naturalExponential(x, sd) {\n      var denominator,\n          guard,\n          j,\n          pow2,\n          sum,\n          t,\n          wpr,\n          rep = 0,\n          i = 0,\n          k = 0,\n          Ctor = x.constructor,\n          rm = Ctor.rounding,\n          pr = Ctor.precision;\n\n      if (!x.d || !x.d[0] || x.e > 17) {\n        return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n      }\n\n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n\n      t = new Ctor(0.03125);\n\n      while (x.e > -2) {\n        x = x.times(t);\n        k += 5;\n      }\n\n      guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n      wpr += guard;\n      denominator = pow2 = sum = new Ctor(1);\n      Ctor.precision = wpr;\n\n      for (;;) {\n        pow2 = finalise(pow2.times(x), wpr, 1);\n        denominator = denominator.times(++i);\n        t = sum.plus(divide(pow2, denominator, wpr, 1));\n\n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          j = k;\n\n          while (j--) sum = finalise(sum.times(sum), wpr, 1);\n\n          if (sd == null) {\n            if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += 10;\n              denominator = pow2 = t = new Ctor(1);\n              i = 0;\n              rep++;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n\n        sum = t;\n      }\n    }\n\n    function naturalLogarithm(y, sd) {\n      var c,\n          c0,\n          denominator,\n          e,\n          numerator,\n          rep,\n          sum,\n          t,\n          wpr,\n          x1,\n          x2,\n          n = 1,\n          guard = 10,\n          x = y,\n          xd = x.d,\n          Ctor = x.constructor,\n          rm = Ctor.rounding,\n          pr = Ctor.precision;\n\n      if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n        return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n      }\n\n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n\n      Ctor.precision = wpr += guard;\n      c = digitsToString(xd);\n      c0 = c.charAt(0);\n\n      if (Math.abs(e = x.e) < 15e14) {\n        while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n          x = x.times(y);\n          c = digitsToString(x.d);\n          c0 = c.charAt(0);\n          n++;\n        }\n\n        e = x.e;\n\n        if (c0 > 1) {\n          x = new Ctor(\"0.\" + c);\n          e++;\n        } else {\n          x = new Ctor(c0 + \".\" + c.slice(1));\n        }\n      } else {\n        t = getLn10(Ctor, wpr + 2, pr).times(e + \"\");\n        x = naturalLogarithm(new Ctor(c0 + \".\" + c.slice(1)), wpr - guard).plus(t);\n        Ctor.precision = pr;\n        return sd == null ? finalise(x, pr, rm, external = true) : x;\n      }\n\n      x1 = x;\n      sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n      x2 = finalise(x.times(x), wpr, 1);\n      denominator = 3;\n\n      for (;;) {\n        numerator = finalise(numerator.times(x2), wpr, 1);\n        t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n\n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          sum = sum.times(2);\n          if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + \"\"));\n          sum = divide(sum, new Ctor(n), wpr, 1);\n\n          if (sd == null) {\n            if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += guard;\n              t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n              x2 = finalise(x.times(x), wpr, 1);\n              denominator = rep = 1;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n\n        sum = t;\n        denominator += 2;\n      }\n    }\n\n    function nonFiniteToString(x) {\n      return String(x.s * x.s / 0);\n    }\n\n    function parseDecimal(x, str) {\n      var e, i, len;\n      if ((e = str.indexOf(\".\")) > -1) str = str.replace(\".\", \"\");\n\n      if ((i = str.search(/e/i)) > 0) {\n        if (e < 0) e = i;\n        e += +str.slice(i + 1);\n        str = str.substring(0, i);\n      } else if (e < 0) {\n        e = str.length;\n      }\n\n      for (i = 0; str.charCodeAt(i) === 48; i++);\n\n      for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\n\n      str = str.slice(i, len);\n\n      if (str) {\n        len -= i;\n        x.e = e = e - i - 1;\n        x.d = [];\n        i = (e + 1) % LOG_BASE;\n        if (e < 0) i += LOG_BASE;\n\n        if (i < len) {\n          if (i) x.d.push(+str.slice(0, i));\n\n          for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\n\n          str = str.slice(i);\n          i = LOG_BASE - str.length;\n        } else {\n          i -= len;\n        }\n\n        for (; i--;) str += \"0\";\n\n        x.d.push(+str);\n\n        if (external) {\n          if (x.e > x.constructor.maxE) {\n            x.d = null;\n            x.e = NaN;\n          } else if (x.e < x.constructor.minE) {\n            x.e = 0;\n            x.d = [0];\n          }\n        }\n      } else {\n        x.e = 0;\n        x.d = [0];\n      }\n\n      return x;\n    }\n\n    function parseOther(x, str) {\n      var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n\n      if (str === \"Infinity\" || str === \"NaN\") {\n        if (!+str) x.s = NaN;\n        x.e = NaN;\n        x.d = null;\n        return x;\n      }\n\n      if (isHex.test(str)) {\n        base = 16;\n        str = str.toLowerCase();\n      } else if (isBinary.test(str)) {\n        base = 2;\n      } else if (isOctal.test(str)) {\n        base = 8;\n      } else {\n        throw Error(invalidArgument + str);\n      }\n\n      i = str.search(/p/i);\n\n      if (i > 0) {\n        p = +str.slice(i + 1);\n        str = str.substring(2, i);\n      } else {\n        str = str.slice(2);\n      }\n\n      i = str.indexOf(\".\");\n      isFloat = i >= 0;\n      Ctor = x.constructor;\n\n      if (isFloat) {\n        str = str.replace(\".\", \"\");\n        len = str.length;\n        i = len - i;\n        divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n      }\n\n      xd = convertBase(str, base, BASE);\n      xe = xd.length - 1;\n\n      for (i = xe; xd[i] === 0; --i) xd.pop();\n\n      if (i < 0) return new Ctor(x.s * 0);\n      x.e = getBase10Exponent(xd, xe);\n      x.d = xd;\n      external = false;\n      if (isFloat) x = divide(x, divisor, len * 4);\n      if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n      external = true;\n      return x;\n    }\n\n    function sine(Ctor, x) {\n      var k,\n          len = x.d.length;\n      if (len < 3) return taylorSeries(Ctor, 2, x, x);\n      k = 1.4 * Math.sqrt(len);\n      k = k > 16 ? 16 : k | 0;\n      x = x.times(1 / tinyPow(5, k));\n      x = taylorSeries(Ctor, 2, x, x);\n      var sin2_x,\n          d5 = new Ctor(5),\n          d16 = new Ctor(16),\n          d20 = new Ctor(20);\n\n      for (; k--;) {\n        sin2_x = x.times(x);\n        x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n      }\n\n      return x;\n    }\n\n    function taylorSeries(Ctor, n, x, y, isHyperbolic) {\n      var j,\n          t,\n          u,\n          x2,\n          i = 1,\n          pr = Ctor.precision,\n          k = Math.ceil(pr / LOG_BASE);\n      external = false;\n      x2 = x.times(x);\n      u = new Ctor(y);\n\n      for (;;) {\n        t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n        u = isHyperbolic ? y.plus(t) : y.minus(t);\n        y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n        t = u.plus(y);\n\n        if (t.d[k] !== void 0) {\n          for (j = k; t.d[j] === u.d[j] && j--;);\n\n          if (j == -1) break;\n        }\n\n        j = u;\n        u = y;\n        y = t;\n        t = j;\n        i++;\n      }\n\n      external = true;\n      t.d.length = k + 1;\n      return t;\n    }\n\n    function tinyPow(b, e) {\n      var n = b;\n\n      while (--e) n *= b;\n\n      return n;\n    }\n\n    function toLessThanHalfPi(Ctor, x) {\n      var t,\n          isNeg = x.s < 0,\n          pi = getPi(Ctor, Ctor.precision, 1),\n          halfPi = pi.times(0.5);\n      x = x.abs();\n\n      if (x.lte(halfPi)) {\n        quadrant = isNeg ? 4 : 1;\n        return x;\n      }\n\n      t = x.divToInt(pi);\n\n      if (t.isZero()) {\n        quadrant = isNeg ? 3 : 2;\n      } else {\n        x = x.minus(t.times(pi));\n\n        if (x.lte(halfPi)) {\n          quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;\n          return x;\n        }\n\n        quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;\n      }\n\n      return x.minus(pi).abs();\n    }\n\n    function toStringBinary(x, baseOut, sd, rm) {\n      var base,\n          e,\n          i,\n          k,\n          len,\n          roundUp,\n          str,\n          xd,\n          y,\n          Ctor = x.constructor,\n          isExp = sd !== void 0;\n\n      if (isExp) {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      } else {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      }\n\n      if (!x.isFinite()) {\n        str = nonFiniteToString(x);\n      } else {\n        str = finiteToString(x);\n        i = str.indexOf(\".\");\n\n        if (isExp) {\n          base = 2;\n\n          if (baseOut == 16) {\n            sd = sd * 4 - 3;\n          } else if (baseOut == 8) {\n            sd = sd * 3 - 2;\n          }\n        } else {\n          base = baseOut;\n        }\n\n        if (i >= 0) {\n          str = str.replace(\".\", \"\");\n          y = new Ctor(1);\n          y.e = str.length - i;\n          y.d = convertBase(finiteToString(y), 10, base);\n          y.e = y.d.length;\n        }\n\n        xd = convertBase(str, 10, base);\n        e = len = xd.length;\n\n        for (; xd[--len] == 0;) xd.pop();\n\n        if (!xd[0]) {\n          str = isExp ? \"0p+0\" : \"0\";\n        } else {\n          if (i < 0) {\n            e--;\n          } else {\n            x = new Ctor(x);\n            x.d = xd;\n            x.e = e;\n            x = divide(x, y, sd, rm, 0, base);\n            xd = x.d;\n            e = x.e;\n            roundUp = inexact;\n          }\n\n          i = xd[sd];\n          k = base / 2;\n          roundUp = roundUp || xd[sd + 1] !== void 0;\n          roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));\n          xd.length = sd;\n\n          if (roundUp) {\n            for (; ++xd[--sd] > base - 1;) {\n              xd[sd] = 0;\n\n              if (!sd) {\n                ++e;\n                xd.unshift(1);\n              }\n            }\n          }\n\n          for (len = xd.length; !xd[len - 1]; --len);\n\n          for (i = 0, str = \"\"; i < len; i++) str += NUMERALS.charAt(xd[i]);\n\n          if (isExp) {\n            if (len > 1) {\n              if (baseOut == 16 || baseOut == 8) {\n                i = baseOut == 16 ? 4 : 3;\n\n                for (--len; len % i; len++) str += \"0\";\n\n                xd = convertBase(str, base, baseOut);\n\n                for (len = xd.length; !xd[len - 1]; --len);\n\n                for (i = 1, str = \"1.\"; i < len; i++) str += NUMERALS.charAt(xd[i]);\n              } else {\n                str = str.charAt(0) + \".\" + str.slice(1);\n              }\n            }\n\n            str = str + (e < 0 ? \"p\" : \"p+\") + e;\n          } else if (e < 0) {\n            for (; ++e;) str = \"0\" + str;\n\n            str = \"0.\" + str;\n          } else {\n            if (++e > len) for (e -= len; e--;) str += \"0\";else if (e < len) str = str.slice(0, e) + \".\" + str.slice(e);\n          }\n        }\n\n        str = (baseOut == 16 ? \"0x\" : baseOut == 2 ? \"0b\" : baseOut == 8 ? \"0o\" : \"\") + str;\n      }\n\n      return x.s < 0 ? \"-\" + str : str;\n    }\n\n    function truncate(arr, len) {\n      if (arr.length > len) {\n        arr.length = len;\n        return true;\n      }\n    }\n\n    function abs(x) {\n      return new this(x).abs();\n    }\n\n    function acos(x) {\n      return new this(x).acos();\n    }\n\n    function acosh(x) {\n      return new this(x).acosh();\n    }\n\n    function add(x, y) {\n      return new this(x).plus(y);\n    }\n\n    function asin(x) {\n      return new this(x).asin();\n    }\n\n    function asinh(x) {\n      return new this(x).asinh();\n    }\n\n    function atan(x) {\n      return new this(x).atan();\n    }\n\n    function atanh(x) {\n      return new this(x).atanh();\n    }\n\n    function atan2(y, x) {\n      y = new this(y);\n      x = new this(x);\n      var r,\n          pr = this.precision,\n          rm = this.rounding,\n          wpr = pr + 4;\n\n      if (!y.s || !x.s) {\n        r = new this(NaN);\n      } else if (!y.d && !x.d) {\n        r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n        r.s = y.s;\n      } else if (!x.d || y.isZero()) {\n        r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n        r.s = y.s;\n      } else if (!y.d || x.isZero()) {\n        r = getPi(this, wpr, 1).times(0.5);\n        r.s = y.s;\n      } else if (x.s < 0) {\n        this.precision = wpr;\n        this.rounding = 1;\n        r = this.atan(divide(y, x, wpr, 1));\n        x = getPi(this, wpr, 1);\n        this.precision = pr;\n        this.rounding = rm;\n        r = y.s < 0 ? r.minus(x) : r.plus(x);\n      } else {\n        r = this.atan(divide(y, x, wpr, 1));\n      }\n\n      return r;\n    }\n\n    function cbrt(x) {\n      return new this(x).cbrt();\n    }\n\n    function ceil(x) {\n      return finalise(x = new this(x), x.e + 1, 2);\n    }\n\n    function config(obj) {\n      if (!obj || typeof obj !== \"object\") throw Error(decimalError + \"Object expected\");\n      var i,\n          p,\n          v,\n          useDefaults = obj.defaults === true,\n          ps = [\"precision\", 1, MAX_DIGITS, \"rounding\", 0, 8, \"toExpNeg\", -EXP_LIMIT, 0, \"toExpPos\", 0, EXP_LIMIT, \"maxE\", 0, EXP_LIMIT, \"minE\", -EXP_LIMIT, 0, \"modulo\", 0, 9];\n\n      for (i = 0; i < ps.length; i += 3) {\n        if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\n\n        if ((v = obj[p]) !== void 0) {\n          if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;else throw Error(invalidArgument + p + \": \" + v);\n        }\n      }\n\n      if (p = \"crypto\", useDefaults) this[p] = DEFAULTS[p];\n\n      if ((v = obj[p]) !== void 0) {\n        if (v === true || v === false || v === 0 || v === 1) {\n          if (v) {\n            if (typeof crypto != \"undefined\" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n              this[p] = true;\n            } else {\n              throw Error(cryptoUnavailable);\n            }\n          } else {\n            this[p] = false;\n          }\n        } else {\n          throw Error(invalidArgument + p + \": \" + v);\n        }\n      }\n\n      return this;\n    }\n\n    function cos(x) {\n      return new this(x).cos();\n    }\n\n    function cosh(x) {\n      return new this(x).cosh();\n    }\n\n    function clone(obj) {\n      var i, p, ps;\n\n      function Decimal2(v) {\n        var e,\n            i2,\n            t,\n            x = this;\n        if (!(x instanceof Decimal2)) return new Decimal2(v);\n        x.constructor = Decimal2;\n\n        if (v instanceof Decimal2) {\n          x.s = v.s;\n\n          if (external) {\n            if (!v.d || v.e > Decimal2.maxE) {\n              x.e = NaN;\n              x.d = null;\n            } else if (v.e < Decimal2.minE) {\n              x.e = 0;\n              x.d = [0];\n            } else {\n              x.e = v.e;\n              x.d = v.d.slice();\n            }\n          } else {\n            x.e = v.e;\n            x.d = v.d ? v.d.slice() : v.d;\n          }\n\n          return;\n        }\n\n        t = typeof v;\n\n        if (t === \"number\") {\n          if (v === 0) {\n            x.s = 1 / v < 0 ? -1 : 1;\n            x.e = 0;\n            x.d = [0];\n            return;\n          }\n\n          if (v < 0) {\n            v = -v;\n            x.s = -1;\n          } else {\n            x.s = 1;\n          }\n\n          if (v === ~~v && v < 1e7) {\n            for (e = 0, i2 = v; i2 >= 10; i2 /= 10) e++;\n\n            if (external) {\n              if (e > Decimal2.maxE) {\n                x.e = NaN;\n                x.d = null;\n              } else if (e < Decimal2.minE) {\n                x.e = 0;\n                x.d = [0];\n              } else {\n                x.e = e;\n                x.d = [v];\n              }\n            } else {\n              x.e = e;\n              x.d = [v];\n            }\n\n            return;\n          } else if (v * 0 !== 0) {\n            if (!v) x.s = NaN;\n            x.e = NaN;\n            x.d = null;\n            return;\n          }\n\n          return parseDecimal(x, v.toString());\n        } else if (t !== \"string\") {\n          throw Error(invalidArgument + v);\n        }\n\n        if ((i2 = v.charCodeAt(0)) === 45) {\n          v = v.slice(1);\n          x.s = -1;\n        } else {\n          if (i2 === 43) v = v.slice(1);\n          x.s = 1;\n        }\n\n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n      }\n\n      Decimal2.prototype = P;\n      Decimal2.ROUND_UP = 0;\n      Decimal2.ROUND_DOWN = 1;\n      Decimal2.ROUND_CEIL = 2;\n      Decimal2.ROUND_FLOOR = 3;\n      Decimal2.ROUND_HALF_UP = 4;\n      Decimal2.ROUND_HALF_DOWN = 5;\n      Decimal2.ROUND_HALF_EVEN = 6;\n      Decimal2.ROUND_HALF_CEIL = 7;\n      Decimal2.ROUND_HALF_FLOOR = 8;\n      Decimal2.EUCLID = 9;\n      Decimal2.config = Decimal2.set = config;\n      Decimal2.clone = clone;\n      Decimal2.isDecimal = isDecimalInstance;\n      Decimal2.abs = abs;\n      Decimal2.acos = acos;\n      Decimal2.acosh = acosh;\n      Decimal2.add = add;\n      Decimal2.asin = asin;\n      Decimal2.asinh = asinh;\n      Decimal2.atan = atan;\n      Decimal2.atanh = atanh;\n      Decimal2.atan2 = atan2;\n      Decimal2.cbrt = cbrt;\n      Decimal2.ceil = ceil;\n      Decimal2.cos = cos;\n      Decimal2.cosh = cosh;\n      Decimal2.div = div;\n      Decimal2.exp = exp;\n      Decimal2.floor = floor;\n      Decimal2.hypot = hypot;\n      Decimal2.ln = ln;\n      Decimal2.log = log;\n      Decimal2.log10 = log10;\n      Decimal2.log2 = log2;\n      Decimal2.max = max;\n      Decimal2.min = min;\n      Decimal2.mod = mod;\n      Decimal2.mul = mul;\n      Decimal2.pow = pow;\n      Decimal2.random = random;\n      Decimal2.round = round;\n      Decimal2.sign = sign;\n      Decimal2.sin = sin;\n      Decimal2.sinh = sinh;\n      Decimal2.sqrt = sqrt;\n      Decimal2.sub = sub;\n      Decimal2.tan = tan;\n      Decimal2.tanh = tanh;\n      Decimal2.trunc = trunc;\n      if (obj === void 0) obj = {};\n\n      if (obj) {\n        if (obj.defaults !== true) {\n          ps = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"];\n\n          for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\n        }\n      }\n\n      Decimal2.config(obj);\n      return Decimal2;\n    }\n\n    function div(x, y) {\n      return new this(x).div(y);\n    }\n\n    function exp(x) {\n      return new this(x).exp();\n    }\n\n    function floor(x) {\n      return finalise(x = new this(x), x.e + 1, 3);\n    }\n\n    function hypot() {\n      var i,\n          n,\n          t = new this(0);\n      external = false;\n\n      for (i = 0; i < arguments.length;) {\n        n = new this(arguments[i++]);\n\n        if (!n.d) {\n          if (n.s) {\n            external = true;\n            return new this(1 / 0);\n          }\n\n          t = n;\n        } else if (t.d) {\n          t = t.plus(n.times(n));\n        }\n      }\n\n      external = true;\n      return t.sqrt();\n    }\n\n    function isDecimalInstance(obj) {\n      return obj instanceof Decimal || obj && obj.name === \"[object Decimal]\" || false;\n    }\n\n    function ln(x) {\n      return new this(x).ln();\n    }\n\n    function log(x, y) {\n      return new this(x).log(y);\n    }\n\n    function log2(x) {\n      return new this(x).log(2);\n    }\n\n    function log10(x) {\n      return new this(x).log(10);\n    }\n\n    function max() {\n      return maxOrMin(this, arguments, \"lt\");\n    }\n\n    function min() {\n      return maxOrMin(this, arguments, \"gt\");\n    }\n\n    function mod(x, y) {\n      return new this(x).mod(y);\n    }\n\n    function mul(x, y) {\n      return new this(x).mul(y);\n    }\n\n    function pow(x, y) {\n      return new this(x).pow(y);\n    }\n\n    function random(sd) {\n      var d,\n          e,\n          k,\n          n,\n          i = 0,\n          r = new this(1),\n          rd = [];\n      if (sd === void 0) sd = this.precision;else checkInt32(sd, 1, MAX_DIGITS);\n      k = Math.ceil(sd / LOG_BASE);\n\n      if (!this.crypto) {\n        for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\n      } else if (crypto.getRandomValues) {\n        d = crypto.getRandomValues(new Uint32Array(k));\n\n        for (; i < k;) {\n          n = d[i];\n\n          if (n >= 429e7) {\n            d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n          } else {\n            rd[i++] = n % 1e7;\n          }\n        }\n      } else if (crypto.randomBytes) {\n        d = crypto.randomBytes(k *= 4);\n\n        for (; i < k;) {\n          n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);\n\n          if (n >= 214e7) {\n            crypto.randomBytes(4).copy(d, i);\n          } else {\n            rd.push(n % 1e7);\n            i += 4;\n          }\n        }\n\n        i = k / 4;\n      } else {\n        throw Error(cryptoUnavailable);\n      }\n\n      k = rd[--i];\n      sd %= LOG_BASE;\n\n      if (k && sd) {\n        n = mathpow(10, LOG_BASE - sd);\n        rd[i] = (k / n | 0) * n;\n      }\n\n      for (; rd[i] === 0; i--) rd.pop();\n\n      if (i < 0) {\n        e = 0;\n        rd = [0];\n      } else {\n        e = -1;\n\n        for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\n\n        for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\n\n        if (k < LOG_BASE) e -= LOG_BASE - k;\n      }\n\n      r.e = e;\n      r.d = rd;\n      return r;\n    }\n\n    function round(x) {\n      return finalise(x = new this(x), x.e + 1, this.rounding);\n    }\n\n    function sign(x) {\n      x = new this(x);\n      return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;\n    }\n\n    function sin(x) {\n      return new this(x).sin();\n    }\n\n    function sinh(x) {\n      return new this(x).sinh();\n    }\n\n    function sqrt(x) {\n      return new this(x).sqrt();\n    }\n\n    function sub(x, y) {\n      return new this(x).sub(y);\n    }\n\n    function tan(x) {\n      return new this(x).tan();\n    }\n\n    function tanh(x) {\n      return new this(x).tanh();\n    }\n\n    function trunc(x) {\n      return finalise(x = new this(x), x.e + 1, 1);\n    }\n\n    Decimal = clone(DEFAULTS);\n    Decimal[\"default\"] = Decimal.Decimal = Decimal;\n    LN10 = new Decimal(LN10);\n    PI = new Decimal(PI);\n\n    if (typeof define == \"function\" && define.amd) {\n      define(function () {\n        return Decimal;\n      });\n    } else if (typeof module2 != \"undefined\" && module2.exports) {\n      if (typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\") {\n        P[Symbol.for(\"nodejs.util.inspect.custom\")] = P.toString;\n        P[Symbol.toStringTag] = \"Decimal\";\n      }\n\n      module2.exports = Decimal;\n    } else {\n      if (!globalScope) {\n        globalScope = typeof self != \"undefined\" && self && self.self == self ? self : window;\n      }\n\n      noConflict = globalScope.Decimal;\n\n      Decimal.noConflict = function () {\n        globalScope.Decimal = noConflict;\n        return Decimal;\n      };\n\n      globalScope.Decimal = Decimal;\n    }\n  })(exports2);\n}); // src/runtime/index-browser.ts\n\n\n__markAsModule(exports);\n\n__export(exports, {\n  Decimal: () => import_decimal.default\n});\n\nvar import_decimal = __toModule(require_decimal()); // Annotate the CommonJS export names for ESM import in node:\n\n\n0 && (module.exports = {\n  Decimal\n});","map":{"version":3,"sources":["/home/peter/Classes/cse416/MAST/node_modules/@prisma/client/runtime/index-browser.js"],"names":["__create","Object","create","__defProp","defineProperty","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__getOwnPropNames","getOwnPropertyNames","__getOwnPropDesc","getOwnPropertyDescriptor","__markAsModule","target","value","__commonJS","callback","module2","exports","__export","all","name","get","enumerable","__exportStar","desc","key","call","__toModule","__esModule","default","require_decimal","exports2","globalScope","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","Decimal","inexact","noConflict","quadrant","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","MAX_SAFE_INTEGER","LN10_PRECISION","length","PI_PRECISION","P","absoluteValue","abs","x","constructor","s","finalise","ceil","e","comparedTo","cmp","y","i","j","xdL","ydL","xd","d","yd","xs","ys","NaN","cosine","cos","pr","rm","Ctor","max","sd","toLessThanHalfPi","neg","cubeRoot","cbrt","m","n","r","rep","t","t3","t3plusx","isFinite","isZero","digitsToString","toExponential","slice","indexOf","toString","times","plus","divide","eq","charAt","decimalPlaces","dp","w","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","gt","greaterThanOrEqualTo","gte","k","hyperbolicCosine","cosh","len","one","tinyPow","taylorSeries","cosh2_x","d8","minus","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","min","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","arg","guard","naturalLogarithm","getLn10","checkRoundingDigits","sub","xe","xLTy","reverse","push","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","add","carry","unshift","z","Error","getPrecision","round","sine","sin","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","checkInt32","str","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","ws","indexOfLastWord","getZeroString","min2","max2","repeating","di","rd","convertBase","baseIn","baseOut","arr","arrL","strL","cos2x","multiplyInteger","temp","compare","a","b","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign2","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","pow2","sum","c","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","p","test","toLowerCase","sin2_x","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","clone","Decimal2","i2","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","isDecimalInstance","hypot","log10","log2","random","sign","arguments","Uint32Array","copy","define","amd","Symbol","iterator","for","toStringTag","self","window","import_decimal","module"],"mappings":"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", {value: true});\nvar __commonJS = (callback, module2) => () => {\n  if (!module2) {\n    module2 = {exports: {}};\n    callback(module2.exports, module2);\n  }\n  return module2.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {get: all[name], enumerable: true});\n};\nvar __exportStar = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2))\n      if (!__hasOwnProp.call(target, key) && key !== \"default\")\n        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});\n  }\n  return target;\n};\nvar __toModule = (module2) => {\n  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);\n};\n\n// ../../node_modules/.pnpm/decimal.js@10.2.1/node_modules/decimal.js/decimal.js\nvar require_decimal = __commonJS((exports2, module2) => {\n  (function(globalScope) {\n    \"use strict\";\n    var EXP_LIMIT = 9e15, MAX_DIGITS = 1e9, NUMERALS = \"0123456789abcdef\", LN10 = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\", PI = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\", DEFAULTS = {\n      precision: 20,\n      rounding: 4,\n      modulo: 1,\n      toExpNeg: -7,\n      toExpPos: 21,\n      minE: -EXP_LIMIT,\n      maxE: EXP_LIMIT,\n      crypto: false\n    }, Decimal, inexact, noConflict, quadrant, external = true, decimalError = \"[DecimalError] \", invalidArgument = decimalError + \"Invalid argument: \", precisionLimitExceeded = decimalError + \"Precision limit exceeded\", cryptoUnavailable = decimalError + \"crypto unavailable\", mathfloor = Math.floor, mathpow = Math.pow, isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i, isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i, isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i, isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, LN10_PRECISION = LN10.length - 1, PI_PRECISION = PI.length - 1, P = {name: \"[object Decimal]\"};\n    P.absoluteValue = P.abs = function() {\n      var x = new this.constructor(this);\n      if (x.s < 0)\n        x.s = 1;\n      return finalise(x);\n    };\n    P.ceil = function() {\n      return finalise(new this.constructor(this), this.e + 1, 2);\n    };\n    P.comparedTo = P.cmp = function(y) {\n      var i, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;\n      if (!xd || !yd) {\n        return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n      }\n      if (!xd[0] || !yd[0])\n        return xd[0] ? xs : yd[0] ? -ys : 0;\n      if (xs !== ys)\n        return xs;\n      if (x.e !== y.e)\n        return x.e > y.e ^ xs < 0 ? 1 : -1;\n      xdL = xd.length;\n      ydL = yd.length;\n      for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n        if (xd[i] !== yd[i])\n          return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n      }\n      return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n    };\n    P.cosine = P.cos = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (!x.d)\n        return new Ctor(NaN);\n      if (!x.d[0])\n        return new Ctor(1);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n      x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n    };\n    P.cubeRoot = P.cbrt = function() {\n      var e, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero())\n        return new Ctor(x);\n      external = false;\n      s = x.s * mathpow(x.s * x, 1 / 3);\n      if (!s || Math.abs(s) == 1 / 0) {\n        n = digitsToString(x.d);\n        e = x.e;\n        if (s = (e - n.length + 1) % 3)\n          n += s == 1 || s == -2 ? \"0\" : \"00\";\n        s = mathpow(n, 1 / 3);\n        e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n        if (s == 1 / 0) {\n          n = \"5e\" + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n        }\n        r = new Ctor(n);\n        r.s = x.s;\n      } else {\n        r = new Ctor(s.toString());\n      }\n      sd = (e = Ctor.precision) + 3;\n      for (; ; ) {\n        t = r;\n        t3 = t.times(t).times(t);\n        t3plusx = t3.plus(x);\n        r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n          if (n == \"9999\" || !rep && n == \"4999\") {\n            if (!rep) {\n              finalise(t, e + 1, 0);\n              if (t.times(t).times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n            sd += 4;\n            rep = 1;\n          } else {\n            if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n              finalise(r, e + 1, 1);\n              m = !r.times(r).times(r).eq(x);\n            }\n            break;\n          }\n        }\n      }\n      external = true;\n      return finalise(r, e, Ctor.rounding, m);\n    };\n    P.decimalPlaces = P.dp = function() {\n      var w, d = this.d, n = NaN;\n      if (d) {\n        w = d.length - 1;\n        n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\n        w = d[w];\n        if (w)\n          for (; w % 10 == 0; w /= 10)\n            n--;\n        if (n < 0)\n          n = 0;\n      }\n      return n;\n    };\n    P.dividedBy = P.div = function(y) {\n      return divide(this, new this.constructor(y));\n    };\n    P.dividedToIntegerBy = P.divToInt = function(y) {\n      var x = this, Ctor = x.constructor;\n      return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n    };\n    P.equals = P.eq = function(y) {\n      return this.cmp(y) === 0;\n    };\n    P.floor = function() {\n      return finalise(new this.constructor(this), this.e + 1, 3);\n    };\n    P.greaterThan = P.gt = function(y) {\n      return this.cmp(y) > 0;\n    };\n    P.greaterThanOrEqualTo = P.gte = function(y) {\n      var k = this.cmp(y);\n      return k == 1 || k === 0;\n    };\n    P.hyperbolicCosine = P.cosh = function() {\n      var k, n, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);\n      if (!x.isFinite())\n        return new Ctor(x.s ? 1 / 0 : NaN);\n      if (x.isZero())\n        return one;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        n = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        n = \"2.3283064365386962890625e-10\";\n      }\n      x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\n      var cosh2_x, i = k, d8 = new Ctor(8);\n      for (; i--; ) {\n        cosh2_x = x.times(x);\n        x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n      }\n      return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n    P.hyperbolicSine = P.sinh = function() {\n      var k, pr, rm, len, x = this, Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n      Ctor.rounding = 1;\n      len = x.d.length;\n      if (len < 3) {\n        x = taylorSeries(Ctor, 2, x, x, true);\n      } else {\n        k = 1.4 * Math.sqrt(len);\n        k = k > 16 ? 16 : k | 0;\n        x = x.times(1 / tinyPow(5, k));\n        x = taylorSeries(Ctor, 2, x, x, true);\n        var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);\n        for (; k--; ) {\n          sinh2_x = x.times(x);\n          x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n        }\n      }\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(x, pr, rm, true);\n    };\n    P.hyperbolicTangent = P.tanh = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (!x.isFinite())\n        return new Ctor(x.s);\n      if (x.isZero())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 7;\n      Ctor.rounding = 1;\n      return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n    };\n    P.inverseCosine = P.acos = function() {\n      var halfPi, x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;\n      if (k !== -1) {\n        return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);\n      }\n      if (x.isZero())\n        return getPi(Ctor, pr + 4, rm).times(0.5);\n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n      x = x.asin();\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return halfPi.minus(x);\n    };\n    P.inverseHyperbolicCosine = P.acosh = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (x.lte(1))\n        return new Ctor(x.eq(1) ? 0 : NaN);\n      if (!x.isFinite())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n      Ctor.rounding = 1;\n      external = false;\n      x = x.times(x).minus(1).sqrt().plus(x);\n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.ln();\n    };\n    P.inverseHyperbolicSine = P.asinh = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (!x.isFinite() || x.isZero())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n      Ctor.rounding = 1;\n      external = false;\n      x = x.times(x).plus(1).sqrt().plus(x);\n      external = true;\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.ln();\n    };\n    P.inverseHyperbolicTangent = P.atanh = function() {\n      var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;\n      if (!x.isFinite())\n        return new Ctor(NaN);\n      if (x.e >= 0)\n        return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      xsd = x.sd();\n      if (Math.max(xsd, pr) < 2 * -x.e - 1)\n        return finalise(new Ctor(x), pr, rm, true);\n      Ctor.precision = wpr = xsd - x.e;\n      x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n      Ctor.precision = pr + 4;\n      Ctor.rounding = 1;\n      x = x.ln();\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.times(0.5);\n    };\n    P.inverseSine = P.asin = function() {\n      var halfPi, k, pr, rm, x = this, Ctor = x.constructor;\n      if (x.isZero())\n        return new Ctor(x);\n      k = x.abs().cmp(1);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      if (k !== -1) {\n        if (k === 0) {\n          halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n          halfPi.s = x.s;\n          return halfPi;\n        }\n        return new Ctor(NaN);\n      }\n      Ctor.precision = pr + 6;\n      Ctor.rounding = 1;\n      x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return x.times(2);\n    };\n    P.inverseTangent = P.atan = function() {\n      var i, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;\n      if (!x.isFinite()) {\n        if (!x.s)\n          return new Ctor(NaN);\n        if (pr + 4 <= PI_PRECISION) {\n          r = getPi(Ctor, pr + 4, rm).times(0.5);\n          r.s = x.s;\n          return r;\n        }\n      } else if (x.isZero()) {\n        return new Ctor(x);\n      } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n        r = getPi(Ctor, pr + 4, rm).times(0.25);\n        r.s = x.s;\n        return r;\n      }\n      Ctor.precision = wpr = pr + 10;\n      Ctor.rounding = 1;\n      k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n      for (i = k; i; --i)\n        x = x.div(x.times(x).plus(1).sqrt().plus(1));\n      external = false;\n      j = Math.ceil(wpr / LOG_BASE);\n      n = 1;\n      x2 = x.times(x);\n      r = new Ctor(x);\n      px = x;\n      for (; i !== -1; ) {\n        px = px.times(x2);\n        t = r.minus(px.div(n += 2));\n        px = px.times(x2);\n        r = t.plus(px.div(n += 2));\n        if (r.d[j] !== void 0)\n          for (i = j; r.d[i] === t.d[i] && i--; )\n            ;\n      }\n      if (k)\n        r = r.times(2 << k - 1);\n      external = true;\n      return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n    };\n    P.isFinite = function() {\n      return !!this.d;\n    };\n    P.isInteger = P.isInt = function() {\n      return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n    };\n    P.isNaN = function() {\n      return !this.s;\n    };\n    P.isNegative = P.isNeg = function() {\n      return this.s < 0;\n    };\n    P.isPositive = P.isPos = function() {\n      return this.s > 0;\n    };\n    P.isZero = function() {\n      return !!this.d && this.d[0] === 0;\n    };\n    P.lessThan = P.lt = function(y) {\n      return this.cmp(y) < 0;\n    };\n    P.lessThanOrEqualTo = P.lte = function(y) {\n      return this.cmp(y) < 1;\n    };\n    P.logarithm = P.log = function(base) {\n      var isBase10, d, denominator, k, inf, num, sd, r, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;\n      if (base == null) {\n        base = new Ctor(10);\n        isBase10 = true;\n      } else {\n        base = new Ctor(base);\n        d = base.d;\n        if (base.s < 0 || !d || !d[0] || base.eq(1))\n          return new Ctor(NaN);\n        isBase10 = base.eq(10);\n      }\n      d = arg.d;\n      if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n        return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n      }\n      if (isBase10) {\n        if (d.length > 1) {\n          inf = true;\n        } else {\n          for (k = d[0]; k % 10 === 0; )\n            k /= 10;\n          inf = k !== 1;\n        }\n      }\n      external = false;\n      sd = pr + guard;\n      num = naturalLogarithm(arg, sd);\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n      r = divide(num, denominator, sd, 1);\n      if (checkRoundingDigits(r.d, k = pr, rm)) {\n        do {\n          sd += 10;\n          num = naturalLogarithm(arg, sd);\n          denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n          r = divide(num, denominator, sd, 1);\n          if (!inf) {\n            if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n              r = finalise(r, pr + 1, 0);\n            }\n            break;\n          }\n        } while (checkRoundingDigits(r.d, k += 10, rm));\n      }\n      external = true;\n      return finalise(r, pr, rm);\n    };\n    P.minus = P.sub = function(y) {\n      var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;\n      y = new Ctor(y);\n      if (!x.d || !y.d) {\n        if (!x.s || !y.s)\n          y = new Ctor(NaN);\n        else if (x.d)\n          y.s = -y.s;\n        else\n          y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n        return y;\n      }\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.plus(y);\n      }\n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      if (!xd[0] || !yd[0]) {\n        if (yd[0])\n          y.s = -y.s;\n        else if (xd[0])\n          y = new Ctor(x);\n        else\n          return new Ctor(rm === 3 ? -0 : 0);\n        return external ? finalise(y, pr, rm) : y;\n      }\n      e = mathfloor(y.e / LOG_BASE);\n      xe = mathfloor(x.e / LOG_BASE);\n      xd = xd.slice();\n      k = xe - e;\n      if (k) {\n        xLTy = k < 0;\n        if (xLTy) {\n          d = xd;\n          k = -k;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = xe;\n          len = xd.length;\n        }\n        i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n        if (k > i) {\n          k = i;\n          d.length = 1;\n        }\n        d.reverse();\n        for (i = k; i--; )\n          d.push(0);\n        d.reverse();\n      } else {\n        i = xd.length;\n        len = yd.length;\n        xLTy = i < len;\n        if (xLTy)\n          len = i;\n        for (i = 0; i < len; i++) {\n          if (xd[i] != yd[i]) {\n            xLTy = xd[i] < yd[i];\n            break;\n          }\n        }\n        k = 0;\n      }\n      if (xLTy) {\n        d = xd;\n        xd = yd;\n        yd = d;\n        y.s = -y.s;\n      }\n      len = xd.length;\n      for (i = yd.length - len; i > 0; --i)\n        xd[len++] = 0;\n      for (i = yd.length; i > k; ) {\n        if (xd[--i] < yd[i]) {\n          for (j = i; j && xd[--j] === 0; )\n            xd[j] = BASE - 1;\n          --xd[j];\n          xd[i] += BASE;\n        }\n        xd[i] -= yd[i];\n      }\n      for (; xd[--len] === 0; )\n        xd.pop();\n      for (; xd[0] === 0; xd.shift())\n        --e;\n      if (!xd[0])\n        return new Ctor(rm === 3 ? -0 : 0);\n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n      return external ? finalise(y, pr, rm) : y;\n    };\n    P.modulo = P.mod = function(y) {\n      var q, x = this, Ctor = x.constructor;\n      y = new Ctor(y);\n      if (!x.d || !y.s || y.d && !y.d[0])\n        return new Ctor(NaN);\n      if (!y.d || x.d && !x.d[0]) {\n        return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n      }\n      external = false;\n      if (Ctor.modulo == 9) {\n        q = divide(x, y.abs(), 0, 3, 1);\n        q.s *= y.s;\n      } else {\n        q = divide(x, y, 0, Ctor.modulo, 1);\n      }\n      q = q.times(y);\n      external = true;\n      return x.minus(q);\n    };\n    P.naturalExponential = P.exp = function() {\n      return naturalExponential(this);\n    };\n    P.naturalLogarithm = P.ln = function() {\n      return naturalLogarithm(this);\n    };\n    P.negated = P.neg = function() {\n      var x = new this.constructor(this);\n      x.s = -x.s;\n      return finalise(x);\n    };\n    P.plus = P.add = function(y) {\n      var carry, d, e, i, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;\n      y = new Ctor(y);\n      if (!x.d || !y.d) {\n        if (!x.s || !y.s)\n          y = new Ctor(NaN);\n        else if (!x.d)\n          y = new Ctor(y.d || x.s === y.s ? x : NaN);\n        return y;\n      }\n      if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n      }\n      xd = x.d;\n      yd = y.d;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      if (!xd[0] || !yd[0]) {\n        if (!yd[0])\n          y = new Ctor(x);\n        return external ? finalise(y, pr, rm) : y;\n      }\n      k = mathfloor(x.e / LOG_BASE);\n      e = mathfloor(y.e / LOG_BASE);\n      xd = xd.slice();\n      i = k - e;\n      if (i) {\n        if (i < 0) {\n          d = xd;\n          i = -i;\n          len = yd.length;\n        } else {\n          d = yd;\n          e = k;\n          len = xd.length;\n        }\n        k = Math.ceil(pr / LOG_BASE);\n        len = k > len ? k + 1 : len + 1;\n        if (i > len) {\n          i = len;\n          d.length = 1;\n        }\n        d.reverse();\n        for (; i--; )\n          d.push(0);\n        d.reverse();\n      }\n      len = xd.length;\n      i = yd.length;\n      if (len - i < 0) {\n        i = len;\n        d = yd;\n        yd = xd;\n        xd = d;\n      }\n      for (carry = 0; i; ) {\n        carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n        xd[i] %= BASE;\n      }\n      if (carry) {\n        xd.unshift(carry);\n        ++e;\n      }\n      for (len = xd.length; xd[--len] == 0; )\n        xd.pop();\n      y.d = xd;\n      y.e = getBase10Exponent(xd, e);\n      return external ? finalise(y, pr, rm) : y;\n    };\n    P.precision = P.sd = function(z) {\n      var k, x = this;\n      if (z !== void 0 && z !== !!z && z !== 1 && z !== 0)\n        throw Error(invalidArgument + z);\n      if (x.d) {\n        k = getPrecision(x.d);\n        if (z && x.e + 1 > k)\n          k = x.e + 1;\n      } else {\n        k = NaN;\n      }\n      return k;\n    };\n    P.round = function() {\n      var x = this, Ctor = x.constructor;\n      return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n    };\n    P.sine = P.sin = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (!x.isFinite())\n        return new Ctor(NaN);\n      if (x.isZero())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n      Ctor.rounding = 1;\n      x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n    };\n    P.squareRoot = P.sqrt = function() {\n      var m, n, sd, r, rep, t, x = this, d = x.d, e = x.e, s = x.s, Ctor = x.constructor;\n      if (s !== 1 || !d || !d[0]) {\n        return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n      }\n      external = false;\n      s = Math.sqrt(+x);\n      if (s == 0 || s == 1 / 0) {\n        n = digitsToString(d);\n        if ((n.length + e) % 2 == 0)\n          n += \"0\";\n        s = Math.sqrt(n);\n        e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n        if (s == 1 / 0) {\n          n = \"5e\" + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf(\"e\") + 1) + e;\n        }\n        r = new Ctor(n);\n      } else {\n        r = new Ctor(s.toString());\n      }\n      sd = (e = Ctor.precision) + 3;\n      for (; ; ) {\n        t = r;\n        r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\n        if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n          n = n.slice(sd - 3, sd + 1);\n          if (n == \"9999\" || !rep && n == \"4999\") {\n            if (!rep) {\n              finalise(t, e + 1, 0);\n              if (t.times(t).eq(x)) {\n                r = t;\n                break;\n              }\n            }\n            sd += 4;\n            rep = 1;\n          } else {\n            if (!+n || !+n.slice(1) && n.charAt(0) == \"5\") {\n              finalise(r, e + 1, 1);\n              m = !r.times(r).eq(x);\n            }\n            break;\n          }\n        }\n      }\n      external = true;\n      return finalise(r, e, Ctor.rounding, m);\n    };\n    P.tangent = P.tan = function() {\n      var pr, rm, x = this, Ctor = x.constructor;\n      if (!x.isFinite())\n        return new Ctor(NaN);\n      if (x.isZero())\n        return new Ctor(x);\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      Ctor.precision = pr + 10;\n      Ctor.rounding = 1;\n      x = x.sin();\n      x.s = 1;\n      x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n      Ctor.precision = pr;\n      Ctor.rounding = rm;\n      return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n    };\n    P.times = P.mul = function(y) {\n      var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;\n      y.s *= x.s;\n      if (!xd || !xd[0] || !yd || !yd[0]) {\n        return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);\n      }\n      e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n      xdL = xd.length;\n      ydL = yd.length;\n      if (xdL < ydL) {\n        r = xd;\n        xd = yd;\n        yd = r;\n        rL = xdL;\n        xdL = ydL;\n        ydL = rL;\n      }\n      r = [];\n      rL = xdL + ydL;\n      for (i = rL; i--; )\n        r.push(0);\n      for (i = ydL; --i >= 0; ) {\n        carry = 0;\n        for (k = xdL + i; k > i; ) {\n          t = r[k] + yd[i] * xd[k - i - 1] + carry;\n          r[k--] = t % BASE | 0;\n          carry = t / BASE | 0;\n        }\n        r[k] = (r[k] + carry) % BASE | 0;\n      }\n      for (; !r[--rL]; )\n        r.pop();\n      if (carry)\n        ++e;\n      else\n        r.shift();\n      y.d = r;\n      y.e = getBase10Exponent(r, e);\n      return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n    };\n    P.toBinary = function(sd, rm) {\n      return toStringBinary(this, 2, sd, rm);\n    };\n    P.toDecimalPlaces = P.toDP = function(dp, rm) {\n      var x = this, Ctor = x.constructor;\n      x = new Ctor(x);\n      if (dp === void 0)\n        return x;\n      checkInt32(dp, 0, MAX_DIGITS);\n      if (rm === void 0)\n        rm = Ctor.rounding;\n      else\n        checkInt32(rm, 0, 8);\n      return finalise(x, dp + x.e + 1, rm);\n    };\n    P.toExponential = function(dp, rm) {\n      var str, x = this, Ctor = x.constructor;\n      if (dp === void 0) {\n        str = finiteToString(x, true);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n        if (rm === void 0)\n          rm = Ctor.rounding;\n        else\n          checkInt32(rm, 0, 8);\n        x = finalise(new Ctor(x), dp + 1, rm);\n        str = finiteToString(x, true, dp + 1);\n      }\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n    P.toFixed = function(dp, rm) {\n      var str, y, x = this, Ctor = x.constructor;\n      if (dp === void 0) {\n        str = finiteToString(x);\n      } else {\n        checkInt32(dp, 0, MAX_DIGITS);\n        if (rm === void 0)\n          rm = Ctor.rounding;\n        else\n          checkInt32(rm, 0, 8);\n        y = finalise(new Ctor(x), dp + x.e + 1, rm);\n        str = finiteToString(y, false, dp + y.e + 1);\n      }\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n    P.toFraction = function(maxD) {\n      var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r, x = this, xd = x.d, Ctor = x.constructor;\n      if (!xd)\n        return new Ctor(x);\n      n1 = d0 = new Ctor(1);\n      d1 = n0 = new Ctor(0);\n      d = new Ctor(d1);\n      e = d.e = getPrecision(xd) - x.e - 1;\n      k = e % LOG_BASE;\n      d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n      if (maxD == null) {\n        maxD = e > 0 ? d : n1;\n      } else {\n        n = new Ctor(maxD);\n        if (!n.isInt() || n.lt(n1))\n          throw Error(invalidArgument + n);\n        maxD = n.gt(d) ? e > 0 ? d : n1 : n;\n      }\n      external = false;\n      n = new Ctor(digitsToString(xd));\n      pr = Ctor.precision;\n      Ctor.precision = e = xd.length * LOG_BASE * 2;\n      for (; ; ) {\n        q = divide(n, d, 0, 1, 1);\n        d2 = d0.plus(q.times(d1));\n        if (d2.cmp(maxD) == 1)\n          break;\n        d0 = d1;\n        d1 = d2;\n        d2 = n1;\n        n1 = n0.plus(q.times(d2));\n        n0 = d2;\n        d2 = d;\n        d = n.minus(q.times(d2));\n        n = d2;\n      }\n      d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n      n0 = n0.plus(d2.times(n1));\n      d0 = d0.plus(d2.times(d1));\n      n0.s = n1.s = x.s;\n      r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n      Ctor.precision = pr;\n      external = true;\n      return r;\n    };\n    P.toHexadecimal = P.toHex = function(sd, rm) {\n      return toStringBinary(this, 16, sd, rm);\n    };\n    P.toNearest = function(y, rm) {\n      var x = this, Ctor = x.constructor;\n      x = new Ctor(x);\n      if (y == null) {\n        if (!x.d)\n          return x;\n        y = new Ctor(1);\n        rm = Ctor.rounding;\n      } else {\n        y = new Ctor(y);\n        if (rm === void 0) {\n          rm = Ctor.rounding;\n        } else {\n          checkInt32(rm, 0, 8);\n        }\n        if (!x.d)\n          return y.s ? x : y;\n        if (!y.d) {\n          if (y.s)\n            y.s = x.s;\n          return y;\n        }\n      }\n      if (y.d[0]) {\n        external = false;\n        x = divide(x, y, 0, rm, 1).times(y);\n        external = true;\n        finalise(x);\n      } else {\n        y.s = x.s;\n        x = y;\n      }\n      return x;\n    };\n    P.toNumber = function() {\n      return +this;\n    };\n    P.toOctal = function(sd, rm) {\n      return toStringBinary(this, 8, sd, rm);\n    };\n    P.toPower = P.pow = function(y) {\n      var e, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));\n      if (!x.d || !y.d || !x.d[0] || !y.d[0])\n        return new Ctor(mathpow(+x, yn));\n      x = new Ctor(x);\n      if (x.eq(1))\n        return x;\n      pr = Ctor.precision;\n      rm = Ctor.rounding;\n      if (y.eq(1))\n        return finalise(x, pr, rm);\n      e = mathfloor(y.e / LOG_BASE);\n      if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n        r = intPow(Ctor, x, k, pr);\n        return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n      }\n      s = x.s;\n      if (s < 0) {\n        if (e < y.d.length - 1)\n          return new Ctor(NaN);\n        if ((y.d[e] & 1) == 0)\n          s = 1;\n        if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n          x.s = s;\n          return x;\n        }\n      }\n      k = mathpow(+x, yn);\n      e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log(\"0.\" + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + \"\").e;\n      if (e > Ctor.maxE + 1 || e < Ctor.minE - 1)\n        return new Ctor(e > 0 ? s / 0 : 0);\n      external = false;\n      Ctor.rounding = x.s = 1;\n      k = Math.min(12, (e + \"\").length);\n      r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\n      if (r.d) {\n        r = finalise(r, pr + 5, 1);\n        if (checkRoundingDigits(r.d, pr, rm)) {\n          e = pr + 10;\n          r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\n          if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n            r = finalise(r, pr + 1, 0);\n          }\n        }\n      }\n      r.s = s;\n      external = true;\n      Ctor.rounding = rm;\n      return finalise(r, pr, rm);\n    };\n    P.toPrecision = function(sd, rm) {\n      var str, x = this, Ctor = x.constructor;\n      if (sd === void 0) {\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0)\n          rm = Ctor.rounding;\n        else\n          checkInt32(rm, 0, 8);\n        x = finalise(new Ctor(x), sd, rm);\n        str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n      }\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n    P.toSignificantDigits = P.toSD = function(sd, rm) {\n      var x = this, Ctor = x.constructor;\n      if (sd === void 0) {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      } else {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0)\n          rm = Ctor.rounding;\n        else\n          checkInt32(rm, 0, 8);\n      }\n      return finalise(new Ctor(x), sd, rm);\n    };\n    P.toString = function() {\n      var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      return x.isNeg() && !x.isZero() ? \"-\" + str : str;\n    };\n    P.truncated = P.trunc = function() {\n      return finalise(new this.constructor(this), this.e + 1, 1);\n    };\n    P.valueOf = P.toJSON = function() {\n      var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n      return x.isNeg() ? \"-\" + str : str;\n    };\n    function digitsToString(d) {\n      var i, k, ws, indexOfLastWord = d.length - 1, str = \"\", w = d[0];\n      if (indexOfLastWord > 0) {\n        str += w;\n        for (i = 1; i < indexOfLastWord; i++) {\n          ws = d[i] + \"\";\n          k = LOG_BASE - ws.length;\n          if (k)\n            str += getZeroString(k);\n          str += ws;\n        }\n        w = d[i];\n        ws = w + \"\";\n        k = LOG_BASE - ws.length;\n        if (k)\n          str += getZeroString(k);\n      } else if (w === 0) {\n        return \"0\";\n      }\n      for (; w % 10 === 0; )\n        w /= 10;\n      return str + w;\n    }\n    function checkInt32(i, min2, max2) {\n      if (i !== ~~i || i < min2 || i > max2) {\n        throw Error(invalidArgument + i);\n      }\n    }\n    function checkRoundingDigits(d, i, rm, repeating) {\n      var di, k, r, rd;\n      for (k = d[0]; k >= 10; k /= 10)\n        --i;\n      if (--i < 0) {\n        i += LOG_BASE;\n        di = 0;\n      } else {\n        di = Math.ceil((i + 1) / LOG_BASE);\n        i %= LOG_BASE;\n      }\n      k = mathpow(10, LOG_BASE - i);\n      rd = d[di] % k | 0;\n      if (repeating == null) {\n        if (i < 3) {\n          if (i == 0)\n            rd = rd / 100 | 0;\n          else if (i == 1)\n            rd = rd / 10 | 0;\n          r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;\n        } else {\n          r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n        }\n      } else {\n        if (i < 4) {\n          if (i == 0)\n            rd = rd / 1e3 | 0;\n          else if (i == 1)\n            rd = rd / 100 | 0;\n          else if (i == 2)\n            rd = rd / 10 | 0;\n          r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n        } else {\n          r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;\n        }\n      }\n      return r;\n    }\n    function convertBase(str, baseIn, baseOut) {\n      var j, arr = [0], arrL, i = 0, strL = str.length;\n      for (; i < strL; ) {\n        for (arrL = arr.length; arrL--; )\n          arr[arrL] *= baseIn;\n        arr[0] += NUMERALS.indexOf(str.charAt(i++));\n        for (j = 0; j < arr.length; j++) {\n          if (arr[j] > baseOut - 1) {\n            if (arr[j + 1] === void 0)\n              arr[j + 1] = 0;\n            arr[j + 1] += arr[j] / baseOut | 0;\n            arr[j] %= baseOut;\n          }\n        }\n      }\n      return arr.reverse();\n    }\n    function cosine(Ctor, x) {\n      var k, y, len = x.d.length;\n      if (len < 32) {\n        k = Math.ceil(len / 3);\n        y = (1 / tinyPow(4, k)).toString();\n      } else {\n        k = 16;\n        y = \"2.3283064365386962890625e-10\";\n      }\n      Ctor.precision += k;\n      x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\n      for (var i = k; i--; ) {\n        var cos2x = x.times(x);\n        x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n      }\n      Ctor.precision -= k;\n      return x;\n    }\n    var divide = function() {\n      function multiplyInteger(x, k, base) {\n        var temp, carry = 0, i = x.length;\n        for (x = x.slice(); i--; ) {\n          temp = x[i] * k + carry;\n          x[i] = temp % base | 0;\n          carry = temp / base | 0;\n        }\n        if (carry)\n          x.unshift(carry);\n        return x;\n      }\n      function compare(a, b, aL, bL) {\n        var i, r;\n        if (aL != bL) {\n          r = aL > bL ? 1 : -1;\n        } else {\n          for (i = r = 0; i < aL; i++) {\n            if (a[i] != b[i]) {\n              r = a[i] > b[i] ? 1 : -1;\n              break;\n            }\n          }\n        }\n        return r;\n      }\n      function subtract(a, b, aL, base) {\n        var i = 0;\n        for (; aL--; ) {\n          a[aL] -= i;\n          i = a[aL] < b[aL] ? 1 : 0;\n          a[aL] = i * base + a[aL] - b[aL];\n        }\n        for (; !a[0] && a.length > 1; )\n          a.shift();\n      }\n      return function(x, y, pr, rm, dp, base) {\n        var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign2 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;\n        if (!xd || !xd[0] || !yd || !yd[0]) {\n          return new Ctor(!x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0);\n        }\n        if (base) {\n          logBase = 1;\n          e = x.e - y.e;\n        } else {\n          base = BASE;\n          logBase = LOG_BASE;\n          e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n        }\n        yL = yd.length;\n        xL = xd.length;\n        q = new Ctor(sign2);\n        qd = q.d = [];\n        for (i = 0; yd[i] == (xd[i] || 0); i++)\n          ;\n        if (yd[i] > (xd[i] || 0))\n          e--;\n        if (pr == null) {\n          sd = pr = Ctor.precision;\n          rm = Ctor.rounding;\n        } else if (dp) {\n          sd = pr + (x.e - y.e) + 1;\n        } else {\n          sd = pr;\n        }\n        if (sd < 0) {\n          qd.push(1);\n          more = true;\n        } else {\n          sd = sd / logBase + 2 | 0;\n          i = 0;\n          if (yL == 1) {\n            k = 0;\n            yd = yd[0];\n            sd++;\n            for (; (i < xL || k) && sd--; i++) {\n              t = k * base + (xd[i] || 0);\n              qd[i] = t / yd | 0;\n              k = t % yd | 0;\n            }\n            more = k || i < xL;\n          } else {\n            k = base / (yd[0] + 1) | 0;\n            if (k > 1) {\n              yd = multiplyInteger(yd, k, base);\n              xd = multiplyInteger(xd, k, base);\n              yL = yd.length;\n              xL = xd.length;\n            }\n            xi = yL;\n            rem = xd.slice(0, yL);\n            remL = rem.length;\n            for (; remL < yL; )\n              rem[remL++] = 0;\n            yz = yd.slice();\n            yz.unshift(0);\n            yd0 = yd[0];\n            if (yd[1] >= base / 2)\n              ++yd0;\n            do {\n              k = 0;\n              cmp = compare(yd, rem, yL, remL);\n              if (cmp < 0) {\n                rem0 = rem[0];\n                if (yL != remL)\n                  rem0 = rem0 * base + (rem[1] || 0);\n                k = rem0 / yd0 | 0;\n                if (k > 1) {\n                  if (k >= base)\n                    k = base - 1;\n                  prod = multiplyInteger(yd, k, base);\n                  prodL = prod.length;\n                  remL = rem.length;\n                  cmp = compare(prod, rem, prodL, remL);\n                  if (cmp == 1) {\n                    k--;\n                    subtract(prod, yL < prodL ? yz : yd, prodL, base);\n                  }\n                } else {\n                  if (k == 0)\n                    cmp = k = 1;\n                  prod = yd.slice();\n                }\n                prodL = prod.length;\n                if (prodL < remL)\n                  prod.unshift(0);\n                subtract(rem, prod, remL, base);\n                if (cmp == -1) {\n                  remL = rem.length;\n                  cmp = compare(yd, rem, yL, remL);\n                  if (cmp < 1) {\n                    k++;\n                    subtract(rem, yL < remL ? yz : yd, remL, base);\n                  }\n                }\n                remL = rem.length;\n              } else if (cmp === 0) {\n                k++;\n                rem = [0];\n              }\n              qd[i++] = k;\n              if (cmp && rem[0]) {\n                rem[remL++] = xd[xi] || 0;\n              } else {\n                rem = [xd[xi]];\n                remL = 1;\n              }\n            } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n            more = rem[0] !== void 0;\n          }\n          if (!qd[0])\n            qd.shift();\n        }\n        if (logBase == 1) {\n          q.e = e;\n          inexact = more;\n        } else {\n          for (i = 1, k = qd[0]; k >= 10; k /= 10)\n            i++;\n          q.e = i + e * logBase - 1;\n          finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n        }\n        return q;\n      };\n    }();\n    function finalise(x, sd, rm, isTruncated) {\n      var digits, i, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;\n      out:\n        if (sd != null) {\n          xd = x.d;\n          if (!xd)\n            return x;\n          for (digits = 1, k = xd[0]; k >= 10; k /= 10)\n            digits++;\n          i = sd - digits;\n          if (i < 0) {\n            i += LOG_BASE;\n            j = sd;\n            w = xd[xdi = 0];\n            rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n          } else {\n            xdi = Math.ceil((i + 1) / LOG_BASE);\n            k = xd.length;\n            if (xdi >= k) {\n              if (isTruncated) {\n                for (; k++ <= xdi; )\n                  xd.push(0);\n                w = rd = 0;\n                digits = 1;\n                i %= LOG_BASE;\n                j = i - LOG_BASE + 1;\n              } else {\n                break out;\n              }\n            } else {\n              w = k = xd[xdi];\n              for (digits = 1; k >= 10; k /= 10)\n                digits++;\n              i %= LOG_BASE;\n              j = i - LOG_BASE + digits;\n              rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n            }\n          }\n          isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\n          roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n          if (sd < 1 || !xd[0]) {\n            xd.length = 0;\n            if (roundUp) {\n              sd -= x.e + 1;\n              xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n              x.e = -sd || 0;\n            } else {\n              xd[0] = x.e = 0;\n            }\n            return x;\n          }\n          if (i == 0) {\n            xd.length = xdi;\n            k = 1;\n            xdi--;\n          } else {\n            xd.length = xdi + 1;\n            k = mathpow(10, LOG_BASE - i);\n            xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n          }\n          if (roundUp) {\n            for (; ; ) {\n              if (xdi == 0) {\n                for (i = 1, j = xd[0]; j >= 10; j /= 10)\n                  i++;\n                j = xd[0] += k;\n                for (k = 1; j >= 10; j /= 10)\n                  k++;\n                if (i != k) {\n                  x.e++;\n                  if (xd[0] == BASE)\n                    xd[0] = 1;\n                }\n                break;\n              } else {\n                xd[xdi] += k;\n                if (xd[xdi] != BASE)\n                  break;\n                xd[xdi--] = 0;\n                k = 1;\n              }\n            }\n          }\n          for (i = xd.length; xd[--i] === 0; )\n            xd.pop();\n        }\n      if (external) {\n        if (x.e > Ctor.maxE) {\n          x.d = null;\n          x.e = NaN;\n        } else if (x.e < Ctor.minE) {\n          x.e = 0;\n          x.d = [0];\n        }\n      }\n      return x;\n    }\n    function finiteToString(x, isExp, sd) {\n      if (!x.isFinite())\n        return nonFiniteToString(x);\n      var k, e = x.e, str = digitsToString(x.d), len = str.length;\n      if (isExp) {\n        if (sd && (k = sd - len) > 0) {\n          str = str.charAt(0) + \".\" + str.slice(1) + getZeroString(k);\n        } else if (len > 1) {\n          str = str.charAt(0) + \".\" + str.slice(1);\n        }\n        str = str + (x.e < 0 ? \"e\" : \"e+\") + x.e;\n      } else if (e < 0) {\n        str = \"0.\" + getZeroString(-e - 1) + str;\n        if (sd && (k = sd - len) > 0)\n          str += getZeroString(k);\n      } else if (e >= len) {\n        str += getZeroString(e + 1 - len);\n        if (sd && (k = sd - e - 1) > 0)\n          str = str + \".\" + getZeroString(k);\n      } else {\n        if ((k = e + 1) < len)\n          str = str.slice(0, k) + \".\" + str.slice(k);\n        if (sd && (k = sd - len) > 0) {\n          if (e + 1 === len)\n            str += \".\";\n          str += getZeroString(k);\n        }\n      }\n      return str;\n    }\n    function getBase10Exponent(digits, e) {\n      var w = digits[0];\n      for (e *= LOG_BASE; w >= 10; w /= 10)\n        e++;\n      return e;\n    }\n    function getLn10(Ctor, sd, pr) {\n      if (sd > LN10_PRECISION) {\n        external = true;\n        if (pr)\n          Ctor.precision = pr;\n        throw Error(precisionLimitExceeded);\n      }\n      return finalise(new Ctor(LN10), sd, 1, true);\n    }\n    function getPi(Ctor, sd, rm) {\n      if (sd > PI_PRECISION)\n        throw Error(precisionLimitExceeded);\n      return finalise(new Ctor(PI), sd, rm, true);\n    }\n    function getPrecision(digits) {\n      var w = digits.length - 1, len = w * LOG_BASE + 1;\n      w = digits[w];\n      if (w) {\n        for (; w % 10 == 0; w /= 10)\n          len--;\n        for (w = digits[0]; w >= 10; w /= 10)\n          len++;\n      }\n      return len;\n    }\n    function getZeroString(k) {\n      var zs = \"\";\n      for (; k--; )\n        zs += \"0\";\n      return zs;\n    }\n    function intPow(Ctor, x, n, pr) {\n      var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);\n      external = false;\n      for (; ; ) {\n        if (n % 2) {\n          r = r.times(x);\n          if (truncate(r.d, k))\n            isTruncated = true;\n        }\n        n = mathfloor(n / 2);\n        if (n === 0) {\n          n = r.d.length - 1;\n          if (isTruncated && r.d[n] === 0)\n            ++r.d[n];\n          break;\n        }\n        x = x.times(x);\n        truncate(x.d, k);\n      }\n      external = true;\n      return r;\n    }\n    function isOdd(n) {\n      return n.d[n.d.length - 1] & 1;\n    }\n    function maxOrMin(Ctor, args, ltgt) {\n      var y, x = new Ctor(args[0]), i = 0;\n      for (; ++i < args.length; ) {\n        y = new Ctor(args[i]);\n        if (!y.s) {\n          x = y;\n          break;\n        } else if (x[ltgt](y)) {\n          x = y;\n        }\n      }\n      return x;\n    }\n    function naturalExponential(x, sd) {\n      var denominator, guard, j, pow2, sum, t, wpr, rep = 0, i = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;\n      if (!x.d || !x.d[0] || x.e > 17) {\n        return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n      }\n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n      t = new Ctor(0.03125);\n      while (x.e > -2) {\n        x = x.times(t);\n        k += 5;\n      }\n      guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n      wpr += guard;\n      denominator = pow2 = sum = new Ctor(1);\n      Ctor.precision = wpr;\n      for (; ; ) {\n        pow2 = finalise(pow2.times(x), wpr, 1);\n        denominator = denominator.times(++i);\n        t = sum.plus(divide(pow2, denominator, wpr, 1));\n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          j = k;\n          while (j--)\n            sum = finalise(sum.times(sum), wpr, 1);\n          if (sd == null) {\n            if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += 10;\n              denominator = pow2 = t = new Ctor(1);\n              i = 0;\n              rep++;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n        sum = t;\n      }\n    }\n    function naturalLogarithm(y, sd) {\n      var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;\n      if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n        return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n      }\n      if (sd == null) {\n        external = false;\n        wpr = pr;\n      } else {\n        wpr = sd;\n      }\n      Ctor.precision = wpr += guard;\n      c = digitsToString(xd);\n      c0 = c.charAt(0);\n      if (Math.abs(e = x.e) < 15e14) {\n        while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n          x = x.times(y);\n          c = digitsToString(x.d);\n          c0 = c.charAt(0);\n          n++;\n        }\n        e = x.e;\n        if (c0 > 1) {\n          x = new Ctor(\"0.\" + c);\n          e++;\n        } else {\n          x = new Ctor(c0 + \".\" + c.slice(1));\n        }\n      } else {\n        t = getLn10(Ctor, wpr + 2, pr).times(e + \"\");\n        x = naturalLogarithm(new Ctor(c0 + \".\" + c.slice(1)), wpr - guard).plus(t);\n        Ctor.precision = pr;\n        return sd == null ? finalise(x, pr, rm, external = true) : x;\n      }\n      x1 = x;\n      sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n      x2 = finalise(x.times(x), wpr, 1);\n      denominator = 3;\n      for (; ; ) {\n        numerator = finalise(numerator.times(x2), wpr, 1);\n        t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n        if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n          sum = sum.times(2);\n          if (e !== 0)\n            sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + \"\"));\n          sum = divide(sum, new Ctor(n), wpr, 1);\n          if (sd == null) {\n            if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n              Ctor.precision = wpr += guard;\n              t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n              x2 = finalise(x.times(x), wpr, 1);\n              denominator = rep = 1;\n            } else {\n              return finalise(sum, Ctor.precision = pr, rm, external = true);\n            }\n          } else {\n            Ctor.precision = pr;\n            return sum;\n          }\n        }\n        sum = t;\n        denominator += 2;\n      }\n    }\n    function nonFiniteToString(x) {\n      return String(x.s * x.s / 0);\n    }\n    function parseDecimal(x, str) {\n      var e, i, len;\n      if ((e = str.indexOf(\".\")) > -1)\n        str = str.replace(\".\", \"\");\n      if ((i = str.search(/e/i)) > 0) {\n        if (e < 0)\n          e = i;\n        e += +str.slice(i + 1);\n        str = str.substring(0, i);\n      } else if (e < 0) {\n        e = str.length;\n      }\n      for (i = 0; str.charCodeAt(i) === 48; i++)\n        ;\n      for (len = str.length; str.charCodeAt(len - 1) === 48; --len)\n        ;\n      str = str.slice(i, len);\n      if (str) {\n        len -= i;\n        x.e = e = e - i - 1;\n        x.d = [];\n        i = (e + 1) % LOG_BASE;\n        if (e < 0)\n          i += LOG_BASE;\n        if (i < len) {\n          if (i)\n            x.d.push(+str.slice(0, i));\n          for (len -= LOG_BASE; i < len; )\n            x.d.push(+str.slice(i, i += LOG_BASE));\n          str = str.slice(i);\n          i = LOG_BASE - str.length;\n        } else {\n          i -= len;\n        }\n        for (; i--; )\n          str += \"0\";\n        x.d.push(+str);\n        if (external) {\n          if (x.e > x.constructor.maxE) {\n            x.d = null;\n            x.e = NaN;\n          } else if (x.e < x.constructor.minE) {\n            x.e = 0;\n            x.d = [0];\n          }\n        }\n      } else {\n        x.e = 0;\n        x.d = [0];\n      }\n      return x;\n    }\n    function parseOther(x, str) {\n      var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n      if (str === \"Infinity\" || str === \"NaN\") {\n        if (!+str)\n          x.s = NaN;\n        x.e = NaN;\n        x.d = null;\n        return x;\n      }\n      if (isHex.test(str)) {\n        base = 16;\n        str = str.toLowerCase();\n      } else if (isBinary.test(str)) {\n        base = 2;\n      } else if (isOctal.test(str)) {\n        base = 8;\n      } else {\n        throw Error(invalidArgument + str);\n      }\n      i = str.search(/p/i);\n      if (i > 0) {\n        p = +str.slice(i + 1);\n        str = str.substring(2, i);\n      } else {\n        str = str.slice(2);\n      }\n      i = str.indexOf(\".\");\n      isFloat = i >= 0;\n      Ctor = x.constructor;\n      if (isFloat) {\n        str = str.replace(\".\", \"\");\n        len = str.length;\n        i = len - i;\n        divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n      }\n      xd = convertBase(str, base, BASE);\n      xe = xd.length - 1;\n      for (i = xe; xd[i] === 0; --i)\n        xd.pop();\n      if (i < 0)\n        return new Ctor(x.s * 0);\n      x.e = getBase10Exponent(xd, xe);\n      x.d = xd;\n      external = false;\n      if (isFloat)\n        x = divide(x, divisor, len * 4);\n      if (p)\n        x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n      external = true;\n      return x;\n    }\n    function sine(Ctor, x) {\n      var k, len = x.d.length;\n      if (len < 3)\n        return taylorSeries(Ctor, 2, x, x);\n      k = 1.4 * Math.sqrt(len);\n      k = k > 16 ? 16 : k | 0;\n      x = x.times(1 / tinyPow(5, k));\n      x = taylorSeries(Ctor, 2, x, x);\n      var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);\n      for (; k--; ) {\n        sin2_x = x.times(x);\n        x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n      }\n      return x;\n    }\n    function taylorSeries(Ctor, n, x, y, isHyperbolic) {\n      var j, t, u, x2, i = 1, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);\n      external = false;\n      x2 = x.times(x);\n      u = new Ctor(y);\n      for (; ; ) {\n        t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n        u = isHyperbolic ? y.plus(t) : y.minus(t);\n        y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n        t = u.plus(y);\n        if (t.d[k] !== void 0) {\n          for (j = k; t.d[j] === u.d[j] && j--; )\n            ;\n          if (j == -1)\n            break;\n        }\n        j = u;\n        u = y;\n        y = t;\n        t = j;\n        i++;\n      }\n      external = true;\n      t.d.length = k + 1;\n      return t;\n    }\n    function tinyPow(b, e) {\n      var n = b;\n      while (--e)\n        n *= b;\n      return n;\n    }\n    function toLessThanHalfPi(Ctor, x) {\n      var t, isNeg = x.s < 0, pi = getPi(Ctor, Ctor.precision, 1), halfPi = pi.times(0.5);\n      x = x.abs();\n      if (x.lte(halfPi)) {\n        quadrant = isNeg ? 4 : 1;\n        return x;\n      }\n      t = x.divToInt(pi);\n      if (t.isZero()) {\n        quadrant = isNeg ? 3 : 2;\n      } else {\n        x = x.minus(t.times(pi));\n        if (x.lte(halfPi)) {\n          quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;\n          return x;\n        }\n        quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;\n      }\n      return x.minus(pi).abs();\n    }\n    function toStringBinary(x, baseOut, sd, rm) {\n      var base, e, i, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;\n      if (isExp) {\n        checkInt32(sd, 1, MAX_DIGITS);\n        if (rm === void 0)\n          rm = Ctor.rounding;\n        else\n          checkInt32(rm, 0, 8);\n      } else {\n        sd = Ctor.precision;\n        rm = Ctor.rounding;\n      }\n      if (!x.isFinite()) {\n        str = nonFiniteToString(x);\n      } else {\n        str = finiteToString(x);\n        i = str.indexOf(\".\");\n        if (isExp) {\n          base = 2;\n          if (baseOut == 16) {\n            sd = sd * 4 - 3;\n          } else if (baseOut == 8) {\n            sd = sd * 3 - 2;\n          }\n        } else {\n          base = baseOut;\n        }\n        if (i >= 0) {\n          str = str.replace(\".\", \"\");\n          y = new Ctor(1);\n          y.e = str.length - i;\n          y.d = convertBase(finiteToString(y), 10, base);\n          y.e = y.d.length;\n        }\n        xd = convertBase(str, 10, base);\n        e = len = xd.length;\n        for (; xd[--len] == 0; )\n          xd.pop();\n        if (!xd[0]) {\n          str = isExp ? \"0p+0\" : \"0\";\n        } else {\n          if (i < 0) {\n            e--;\n          } else {\n            x = new Ctor(x);\n            x.d = xd;\n            x.e = e;\n            x = divide(x, y, sd, rm, 0, base);\n            xd = x.d;\n            e = x.e;\n            roundUp = inexact;\n          }\n          i = xd[sd];\n          k = base / 2;\n          roundUp = roundUp || xd[sd + 1] !== void 0;\n          roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));\n          xd.length = sd;\n          if (roundUp) {\n            for (; ++xd[--sd] > base - 1; ) {\n              xd[sd] = 0;\n              if (!sd) {\n                ++e;\n                xd.unshift(1);\n              }\n            }\n          }\n          for (len = xd.length; !xd[len - 1]; --len)\n            ;\n          for (i = 0, str = \"\"; i < len; i++)\n            str += NUMERALS.charAt(xd[i]);\n          if (isExp) {\n            if (len > 1) {\n              if (baseOut == 16 || baseOut == 8) {\n                i = baseOut == 16 ? 4 : 3;\n                for (--len; len % i; len++)\n                  str += \"0\";\n                xd = convertBase(str, base, baseOut);\n                for (len = xd.length; !xd[len - 1]; --len)\n                  ;\n                for (i = 1, str = \"1.\"; i < len; i++)\n                  str += NUMERALS.charAt(xd[i]);\n              } else {\n                str = str.charAt(0) + \".\" + str.slice(1);\n              }\n            }\n            str = str + (e < 0 ? \"p\" : \"p+\") + e;\n          } else if (e < 0) {\n            for (; ++e; )\n              str = \"0\" + str;\n            str = \"0.\" + str;\n          } else {\n            if (++e > len)\n              for (e -= len; e--; )\n                str += \"0\";\n            else if (e < len)\n              str = str.slice(0, e) + \".\" + str.slice(e);\n          }\n        }\n        str = (baseOut == 16 ? \"0x\" : baseOut == 2 ? \"0b\" : baseOut == 8 ? \"0o\" : \"\") + str;\n      }\n      return x.s < 0 ? \"-\" + str : str;\n    }\n    function truncate(arr, len) {\n      if (arr.length > len) {\n        arr.length = len;\n        return true;\n      }\n    }\n    function abs(x) {\n      return new this(x).abs();\n    }\n    function acos(x) {\n      return new this(x).acos();\n    }\n    function acosh(x) {\n      return new this(x).acosh();\n    }\n    function add(x, y) {\n      return new this(x).plus(y);\n    }\n    function asin(x) {\n      return new this(x).asin();\n    }\n    function asinh(x) {\n      return new this(x).asinh();\n    }\n    function atan(x) {\n      return new this(x).atan();\n    }\n    function atanh(x) {\n      return new this(x).atanh();\n    }\n    function atan2(y, x) {\n      y = new this(y);\n      x = new this(x);\n      var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;\n      if (!y.s || !x.s) {\n        r = new this(NaN);\n      } else if (!y.d && !x.d) {\n        r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n        r.s = y.s;\n      } else if (!x.d || y.isZero()) {\n        r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n        r.s = y.s;\n      } else if (!y.d || x.isZero()) {\n        r = getPi(this, wpr, 1).times(0.5);\n        r.s = y.s;\n      } else if (x.s < 0) {\n        this.precision = wpr;\n        this.rounding = 1;\n        r = this.atan(divide(y, x, wpr, 1));\n        x = getPi(this, wpr, 1);\n        this.precision = pr;\n        this.rounding = rm;\n        r = y.s < 0 ? r.minus(x) : r.plus(x);\n      } else {\n        r = this.atan(divide(y, x, wpr, 1));\n      }\n      return r;\n    }\n    function cbrt(x) {\n      return new this(x).cbrt();\n    }\n    function ceil(x) {\n      return finalise(x = new this(x), x.e + 1, 2);\n    }\n    function config(obj) {\n      if (!obj || typeof obj !== \"object\")\n        throw Error(decimalError + \"Object expected\");\n      var i, p, v, useDefaults = obj.defaults === true, ps = [\n        \"precision\",\n        1,\n        MAX_DIGITS,\n        \"rounding\",\n        0,\n        8,\n        \"toExpNeg\",\n        -EXP_LIMIT,\n        0,\n        \"toExpPos\",\n        0,\n        EXP_LIMIT,\n        \"maxE\",\n        0,\n        EXP_LIMIT,\n        \"minE\",\n        -EXP_LIMIT,\n        0,\n        \"modulo\",\n        0,\n        9\n      ];\n      for (i = 0; i < ps.length; i += 3) {\n        if (p = ps[i], useDefaults)\n          this[p] = DEFAULTS[p];\n        if ((v = obj[p]) !== void 0) {\n          if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2])\n            this[p] = v;\n          else\n            throw Error(invalidArgument + p + \": \" + v);\n        }\n      }\n      if (p = \"crypto\", useDefaults)\n        this[p] = DEFAULTS[p];\n      if ((v = obj[p]) !== void 0) {\n        if (v === true || v === false || v === 0 || v === 1) {\n          if (v) {\n            if (typeof crypto != \"undefined\" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n              this[p] = true;\n            } else {\n              throw Error(cryptoUnavailable);\n            }\n          } else {\n            this[p] = false;\n          }\n        } else {\n          throw Error(invalidArgument + p + \": \" + v);\n        }\n      }\n      return this;\n    }\n    function cos(x) {\n      return new this(x).cos();\n    }\n    function cosh(x) {\n      return new this(x).cosh();\n    }\n    function clone(obj) {\n      var i, p, ps;\n      function Decimal2(v) {\n        var e, i2, t, x = this;\n        if (!(x instanceof Decimal2))\n          return new Decimal2(v);\n        x.constructor = Decimal2;\n        if (v instanceof Decimal2) {\n          x.s = v.s;\n          if (external) {\n            if (!v.d || v.e > Decimal2.maxE) {\n              x.e = NaN;\n              x.d = null;\n            } else if (v.e < Decimal2.minE) {\n              x.e = 0;\n              x.d = [0];\n            } else {\n              x.e = v.e;\n              x.d = v.d.slice();\n            }\n          } else {\n            x.e = v.e;\n            x.d = v.d ? v.d.slice() : v.d;\n          }\n          return;\n        }\n        t = typeof v;\n        if (t === \"number\") {\n          if (v === 0) {\n            x.s = 1 / v < 0 ? -1 : 1;\n            x.e = 0;\n            x.d = [0];\n            return;\n          }\n          if (v < 0) {\n            v = -v;\n            x.s = -1;\n          } else {\n            x.s = 1;\n          }\n          if (v === ~~v && v < 1e7) {\n            for (e = 0, i2 = v; i2 >= 10; i2 /= 10)\n              e++;\n            if (external) {\n              if (e > Decimal2.maxE) {\n                x.e = NaN;\n                x.d = null;\n              } else if (e < Decimal2.minE) {\n                x.e = 0;\n                x.d = [0];\n              } else {\n                x.e = e;\n                x.d = [v];\n              }\n            } else {\n              x.e = e;\n              x.d = [v];\n            }\n            return;\n          } else if (v * 0 !== 0) {\n            if (!v)\n              x.s = NaN;\n            x.e = NaN;\n            x.d = null;\n            return;\n          }\n          return parseDecimal(x, v.toString());\n        } else if (t !== \"string\") {\n          throw Error(invalidArgument + v);\n        }\n        if ((i2 = v.charCodeAt(0)) === 45) {\n          v = v.slice(1);\n          x.s = -1;\n        } else {\n          if (i2 === 43)\n            v = v.slice(1);\n          x.s = 1;\n        }\n        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n      }\n      Decimal2.prototype = P;\n      Decimal2.ROUND_UP = 0;\n      Decimal2.ROUND_DOWN = 1;\n      Decimal2.ROUND_CEIL = 2;\n      Decimal2.ROUND_FLOOR = 3;\n      Decimal2.ROUND_HALF_UP = 4;\n      Decimal2.ROUND_HALF_DOWN = 5;\n      Decimal2.ROUND_HALF_EVEN = 6;\n      Decimal2.ROUND_HALF_CEIL = 7;\n      Decimal2.ROUND_HALF_FLOOR = 8;\n      Decimal2.EUCLID = 9;\n      Decimal2.config = Decimal2.set = config;\n      Decimal2.clone = clone;\n      Decimal2.isDecimal = isDecimalInstance;\n      Decimal2.abs = abs;\n      Decimal2.acos = acos;\n      Decimal2.acosh = acosh;\n      Decimal2.add = add;\n      Decimal2.asin = asin;\n      Decimal2.asinh = asinh;\n      Decimal2.atan = atan;\n      Decimal2.atanh = atanh;\n      Decimal2.atan2 = atan2;\n      Decimal2.cbrt = cbrt;\n      Decimal2.ceil = ceil;\n      Decimal2.cos = cos;\n      Decimal2.cosh = cosh;\n      Decimal2.div = div;\n      Decimal2.exp = exp;\n      Decimal2.floor = floor;\n      Decimal2.hypot = hypot;\n      Decimal2.ln = ln;\n      Decimal2.log = log;\n      Decimal2.log10 = log10;\n      Decimal2.log2 = log2;\n      Decimal2.max = max;\n      Decimal2.min = min;\n      Decimal2.mod = mod;\n      Decimal2.mul = mul;\n      Decimal2.pow = pow;\n      Decimal2.random = random;\n      Decimal2.round = round;\n      Decimal2.sign = sign;\n      Decimal2.sin = sin;\n      Decimal2.sinh = sinh;\n      Decimal2.sqrt = sqrt;\n      Decimal2.sub = sub;\n      Decimal2.tan = tan;\n      Decimal2.tanh = tanh;\n      Decimal2.trunc = trunc;\n      if (obj === void 0)\n        obj = {};\n      if (obj) {\n        if (obj.defaults !== true) {\n          ps = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"];\n          for (i = 0; i < ps.length; )\n            if (!obj.hasOwnProperty(p = ps[i++]))\n              obj[p] = this[p];\n        }\n      }\n      Decimal2.config(obj);\n      return Decimal2;\n    }\n    function div(x, y) {\n      return new this(x).div(y);\n    }\n    function exp(x) {\n      return new this(x).exp();\n    }\n    function floor(x) {\n      return finalise(x = new this(x), x.e + 1, 3);\n    }\n    function hypot() {\n      var i, n, t = new this(0);\n      external = false;\n      for (i = 0; i < arguments.length; ) {\n        n = new this(arguments[i++]);\n        if (!n.d) {\n          if (n.s) {\n            external = true;\n            return new this(1 / 0);\n          }\n          t = n;\n        } else if (t.d) {\n          t = t.plus(n.times(n));\n        }\n      }\n      external = true;\n      return t.sqrt();\n    }\n    function isDecimalInstance(obj) {\n      return obj instanceof Decimal || obj && obj.name === \"[object Decimal]\" || false;\n    }\n    function ln(x) {\n      return new this(x).ln();\n    }\n    function log(x, y) {\n      return new this(x).log(y);\n    }\n    function log2(x) {\n      return new this(x).log(2);\n    }\n    function log10(x) {\n      return new this(x).log(10);\n    }\n    function max() {\n      return maxOrMin(this, arguments, \"lt\");\n    }\n    function min() {\n      return maxOrMin(this, arguments, \"gt\");\n    }\n    function mod(x, y) {\n      return new this(x).mod(y);\n    }\n    function mul(x, y) {\n      return new this(x).mul(y);\n    }\n    function pow(x, y) {\n      return new this(x).pow(y);\n    }\n    function random(sd) {\n      var d, e, k, n, i = 0, r = new this(1), rd = [];\n      if (sd === void 0)\n        sd = this.precision;\n      else\n        checkInt32(sd, 1, MAX_DIGITS);\n      k = Math.ceil(sd / LOG_BASE);\n      if (!this.crypto) {\n        for (; i < k; )\n          rd[i++] = Math.random() * 1e7 | 0;\n      } else if (crypto.getRandomValues) {\n        d = crypto.getRandomValues(new Uint32Array(k));\n        for (; i < k; ) {\n          n = d[i];\n          if (n >= 429e7) {\n            d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n          } else {\n            rd[i++] = n % 1e7;\n          }\n        }\n      } else if (crypto.randomBytes) {\n        d = crypto.randomBytes(k *= 4);\n        for (; i < k; ) {\n          n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);\n          if (n >= 214e7) {\n            crypto.randomBytes(4).copy(d, i);\n          } else {\n            rd.push(n % 1e7);\n            i += 4;\n          }\n        }\n        i = k / 4;\n      } else {\n        throw Error(cryptoUnavailable);\n      }\n      k = rd[--i];\n      sd %= LOG_BASE;\n      if (k && sd) {\n        n = mathpow(10, LOG_BASE - sd);\n        rd[i] = (k / n | 0) * n;\n      }\n      for (; rd[i] === 0; i--)\n        rd.pop();\n      if (i < 0) {\n        e = 0;\n        rd = [0];\n      } else {\n        e = -1;\n        for (; rd[0] === 0; e -= LOG_BASE)\n          rd.shift();\n        for (k = 1, n = rd[0]; n >= 10; n /= 10)\n          k++;\n        if (k < LOG_BASE)\n          e -= LOG_BASE - k;\n      }\n      r.e = e;\n      r.d = rd;\n      return r;\n    }\n    function round(x) {\n      return finalise(x = new this(x), x.e + 1, this.rounding);\n    }\n    function sign(x) {\n      x = new this(x);\n      return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;\n    }\n    function sin(x) {\n      return new this(x).sin();\n    }\n    function sinh(x) {\n      return new this(x).sinh();\n    }\n    function sqrt(x) {\n      return new this(x).sqrt();\n    }\n    function sub(x, y) {\n      return new this(x).sub(y);\n    }\n    function tan(x) {\n      return new this(x).tan();\n    }\n    function tanh(x) {\n      return new this(x).tanh();\n    }\n    function trunc(x) {\n      return finalise(x = new this(x), x.e + 1, 1);\n    }\n    Decimal = clone(DEFAULTS);\n    Decimal[\"default\"] = Decimal.Decimal = Decimal;\n    LN10 = new Decimal(LN10);\n    PI = new Decimal(PI);\n    if (typeof define == \"function\" && define.amd) {\n      define(function() {\n        return Decimal;\n      });\n    } else if (typeof module2 != \"undefined\" && module2.exports) {\n      if (typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\") {\n        P[Symbol.for(\"nodejs.util.inspect.custom\")] = P.toString;\n        P[Symbol.toStringTag] = \"Decimal\";\n      }\n      module2.exports = Decimal;\n    } else {\n      if (!globalScope) {\n        globalScope = typeof self != \"undefined\" && self && self.self == self ? self : window;\n      }\n      noConflict = globalScope.Decimal;\n      Decimal.noConflict = function() {\n        globalScope.Decimal = noConflict;\n        return Decimal;\n      };\n      globalScope.Decimal = Decimal;\n    }\n  })(exports2);\n});\n\n// src/runtime/index-browser.ts\n__markAsModule(exports);\n__export(exports, {\n  Decimal: () => import_decimal.default\n});\nvar import_decimal = __toModule(require_decimal());\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Decimal\n});\n"]},"metadata":{},"sourceType":"script"}