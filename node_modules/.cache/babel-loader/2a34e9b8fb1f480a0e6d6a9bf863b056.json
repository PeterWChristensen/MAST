{"ast":null,"code":"var _jsxFileName = \"/Users/haley/Desktop/MAST/src/components/modal/ModalWindow.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CSVReader } from 'react-papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonRef = /*#__PURE__*/React.createRef();\n\nclass ModalWindow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOpenDialog = e => {\n      // Note that the ref is set async, so it might be null at some point\n      if (buttonRef.current) {\n        buttonRef.current.open(e);\n      }\n    };\n\n    this.handleOnFileLoad = data => {\n      console.log('---------------------------');\n      console.log(data);\n      console.log('---------------------------');\n    };\n\n    this.handleOnError = (err, file, inputElem, reason) => {\n      console.log(err);\n    };\n\n    this.handleOnRemoveFile = data => {\n      console.log('---------------------------');\n      console.log(data);\n      console.log('---------------------------');\n    };\n\n    this.handleRemoveFile = e => {\n      // Note that the ref is set async, so it might be null at some point\n      if (buttonRef.current) {\n        buttonRef.current.removeFile(e);\n      }\n    };\n  }\n\n  render() {\n    // Type variable to store modal to display\n    let modalContents = null;\n\n    if (this.props.modalType === \"import\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"import\",\n        header: \"Import\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [\"Choose file to import:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n            ref: buttonRef,\n            onFileLoad: this.handleOnFileLoad,\n            onError: this.handleOnError,\n            noClick: true,\n            noDrag: true,\n            onRemoveFile: this.handleOnRemoveFile,\n            children: ({\n              file\n            }) => /*#__PURE__*/_jsxDEV(\"aside\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'row',\n                marginBottom: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: this.handleOpenDialog,\n                style: {\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  width: '40%',\n                  paddingLeft: 0,\n                  paddingRight: 0\n                },\n                children: \"Browse file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  borderWidth: 1,\n                  borderStyle: 'solid',\n                  borderColor: '#ccc',\n                  height: 45,\n                  lineHeight: 2.5,\n                  marginTop: 5,\n                  marginBottom: 5,\n                  paddingLeft: 13,\n                  paddingTop: 3,\n                  width: '60%'\n                },\n                children: file && file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  borderRadius: 0,\n                  marginLeft: 0,\n                  marginRight: 0,\n                  paddingLeft: 20,\n                  paddingRight: 20\n                },\n                onClick: this.handleRemoveFile,\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    } else if (this.props.modalType === \"addStudent\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"addStudent\",\n        header: \"Add\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [\"Do you want to add this student?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this);\n    } else if (this.props.modalType === \"cancelAddStudent\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"cancelAddStudent\",\n        header: \"Cancel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [\"Cancel adding student?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modal_background\",\n        children: modalContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/haley/Desktop/MAST/src/components/modal/ModalWindow.js"],"names":["React","Link","CSVReader","buttonRef","createRef","ModalWindow","Component","handleOpenDialog","e","current","open","handleOnFileLoad","data","console","log","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","render","modalContents","props","modalType","display","flexDirection","marginBottom","borderRadius","marginLeft","marginRight","width","paddingLeft","paddingRight","borderWidth","borderStyle","borderColor","height","lineHeight","marginTop","paddingTop","name","hideModalDialogPopUp"],"mappings":"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","sourcesContent":["import React from 'react';    \nimport { Link } from 'react-router-dom';\nimport { CSVReader } from 'react-papaparse';\nconst buttonRef = React.createRef()\nclass ModalWindow extends React.Component {  \n    handleOpenDialog = (e) => {\n        // Note that the ref is set async, so it might be null at some point\n        if (buttonRef.current) {\n          buttonRef.current.open(e)\n        }\n      }\n    \n      handleOnFileLoad = (data) => {\n        console.log('---------------------------')\n        console.log(data)\n        console.log('---------------------------')\n      }\n    \n      handleOnError = (err, file, inputElem, reason) => {\n        console.log(err)\n      }\n    \n      handleOnRemoveFile = (data) => {\n        console.log('---------------------------')\n        console.log(data)\n        console.log('---------------------------')\n      }\n    \n      handleRemoveFile = (e) => {\n        // Note that the ref is set async, so it might be null at some point\n        if (buttonRef.current) {\n          buttonRef.current.removeFile(e)\n        }\n      }\n\n    render() {\n        // Type variable to store modal to display\n        let modalContents = null; \n\n        if(this.props.modalType === \"import\"){\n            modalContents =\n            <div className=\"modal\" id=\"import\" header=\"Import\" >\n                <p id=\"modalDialogMessage\">\n                    Choose file to import: \n                    <br></br><br></br>\n                    <CSVReader\n        ref={buttonRef}\n        onFileLoad={this.handleOnFileLoad}\n        onError={this.handleOnError}\n        noClick\n        noDrag\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            }}\n          >\n            <button\n              type='button'\n              onClick={this.handleOpenDialog}\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '40%',\n                paddingLeft: 0,\n                paddingRight: 0\n              }}\n            >\n              Browse file\n            </button>\n            <div\n              style={{\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: '#ccc',\n                height: 45,\n                lineHeight: 2.5,\n                marginTop: 5,\n                marginBottom: 5,\n                paddingLeft: 13,\n                paddingTop: 3,\n                width: '60%'\n              }}\n            >\n              {file && file.name}\n            </div>\n            <button\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                paddingLeft: 20,\n                paddingRight: 20\n              }}\n              onClick={this.handleRemoveFile}\n            >\n              Remove\n            </button>\n          </aside>\n        )}\n      </CSVReader>\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp} >Import</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp} >Cancel</button>    \n            </div>;\n        }\n        else if(this.props.modalType === \"addStudent\"){\n            modalContents =\n            <div className=\"modal\" id=\"addStudent\" header=\"Add\" >\n                <p id=\"modalDialogMessage\">\n                Do you want to add this student?\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp} >Yes</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp} >No</button>    \n            </div>;\n        }\n        else if(this.props.modalType === \"cancelAddStudent\"){\n            modalContents =\n            <div className=\"modal\" id=\"cancelAddStudent\" header=\"Cancel\"  >\n                <p id=\"modalDialogMessage\">\n                Cancel adding student?\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp}>Yes</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp}>No</button> \n            </div>\n        }\n        return (  \n        <div>\n            <div id = \"modal_background\">\n                    {modalContents}\n            </div>\n        </div>\n        );  \n    }  \n}  \nexport default ModalWindow;"]},"metadata":{},"sourceType":"module"}