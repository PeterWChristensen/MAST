{"ast":null,"code":"var _jsxFileName = \"/Users/haley/Desktop/MAST/src/components/modal/ModalWindow.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport CSVReader from \"react-csv-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true\n};\n\nclass ModalWindow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleImportDegreeRequirements = function (data, fileInfo) {\n      console.log(data, fileInfo);\n    };\n\n    this.handleImportCourseOfferings = function (data, fileInfo) {\n      console.log(data, fileInfo);\n    };\n  }\n\n  render() {\n    // Type variable to store modal to display\n    let modalContents = null;\n\n    if (this.props.modalType === \"importDegreeRequirements\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"import\",\n        header: \"Import\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n            label: \"Choose file to import: \",\n            onFileLoaded: this.handleImportCourseOfferings,\n            parserOptions: papaparseOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    } else if (this.props.modalType === \"importCourseOfferings\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"import\",\n        header: \"Import\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n            label: \"Choose file to import: \",\n            onFileLoaded: this.handleImportCourseOfferings,\n            parserOptions: papaparseOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    } else if (this.props.modalType === \"addStudent\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"addStudent\",\n        header: \"Add\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [\"Do you want to add this student?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    } else if (this.props.modalType === \"cancelAddStudent\") {\n      modalContents = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        id: \"cancelAddStudent\",\n        header: \"Cancel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"modalDialogMessage\",\n          children: [\"Cancel adding student?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButton\",\n            onClick: this.props.hideModalDialogPopUp,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalButton\",\n          modal: \"close\",\n          onClick: this.props.hideModalDialogPopUp,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modal_background\",\n        children: modalContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/haley/Desktop/MAST/src/components/modal/ModalWindow.js"],"names":["React","Link","CSVReader","papaparseOptions","header","dynamicTyping","skipEmptyLines","ModalWindow","Component","handleImportDegreeRequirements","data","fileInfo","console","log","handleImportCourseOfferings","render","modalContents","props","modalType","hideModalDialogPopUp"],"mappings":"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","sourcesContent":["import React from 'react';    \nimport { Link } from 'react-router-dom';\nimport CSVReader from \"react-csv-reader\";\n\nconst papaparseOptions = {\n  header: true,\n  dynamicTyping: true,\n  skipEmptyLines: true,\n};\n\nclass ModalWindow extends React.Component {  \n    \n    handleImportDegreeRequirements = function(data, fileInfo) {\n        console.log(data, fileInfo);\n    }\n\n    handleImportCourseOfferings = function(data, fileInfo) {\n        console.log(data, fileInfo);\n    }\n\n    render() {\n        // Type variable to store modal to display\n        let modalContents = null; \n\n        if(this.props.modalType === \"importDegreeRequirements\"){\n            modalContents =\n            <div className=\"modal\" id=\"import\" header=\"Import\" >\n                <p id=\"modalDialogMessage\">\n                    <br></br><br></br>\n                    <CSVReader\n                        label=\"Choose file to import: \"\n                        onFileLoaded={this.handleImportCourseOfferings}\n                        parserOptions={papaparseOptions}/>\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp} >Import</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp} >Cancel</button>    \n            </div>;\n        }\n        else if(this.props.modalType === \"importCourseOfferings\"){\n            modalContents =\n            <div className=\"modal\" id=\"import\" header=\"Import\" >\n                <p id=\"modalDialogMessage\">\n                    <br></br><br></br>\n                    <CSVReader\n                        label=\"Choose file to import: \"\n                        onFileLoaded={this.handleImportCourseOfferings}\n                        parserOptions={papaparseOptions}/>\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp} >Import</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp} >Cancel</button>    \n            </div>;\n        }\n        else if(this.props.modalType === \"addStudent\"){\n            modalContents =\n            <div className=\"modal\" id=\"addStudent\" header=\"Add\" >\n                <p id=\"modalDialogMessage\">\n                Do you want to add this student?\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp} >Yes</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp} >No</button>    \n            </div>;\n        }\n        else if(this.props.modalType === \"cancelAddStudent\"){\n            modalContents =\n            <div className=\"modal\" id=\"cancelAddStudent\" header=\"Cancel\"  >\n                <p id=\"modalDialogMessage\">\n                Cancel adding student?\n                <br></br><br></br></p>\n                <Link to=\"/\"><button className=\"modalButton\" onClick={this.props.hideModalDialogPopUp}>Yes</button></Link>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <button className=\"modalButton\" modal=\"close\" onClick={this.props.hideModalDialogPopUp}>No</button> \n            </div>\n        }\n        return (  \n        <div>\n            <div id = \"modal_background\">\n                    {modalContents}\n            </div>\n        </div>\n        );  \n    }  \n}  \nexport default ModalWindow;"]},"metadata":{},"sourceType":"module"}