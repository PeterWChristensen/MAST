{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst {\n  Decimal\n} = require('@prisma/client/runtime/index-browser');\n\nconst Prisma = {};\nexports.Prisma = Prisma;\n/**\n * Prisma Client JS version: 2.19.0\n * Query Engine version: c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d\n */\n\nPrisma.prismaVersion = {\n  client: \"2.19.0\",\n  engine: \"c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d\"\n};\n\nPrisma.PrismaClientKnownRequestError = () => {\n  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.PrismaClientUnknownRequestError = () => {\n  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.PrismaClientRustPanicError = () => {\n  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.PrismaClientInitializationError = () => {\n  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.PrismaClientValidationError = () => {\n  throw new Error(`PrismaClientValidationError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.Decimal = Decimal;\n/**\n * Re-export of sql-template-tag\n */\n\nPrisma.sql = () => {\n  throw new Error(`sqltag is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.empty = () => {\n  throw new Error(`empty is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.join = () => {\n  throw new Error(`join is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.raw = () => {\n  throw new Error(`raw is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n};\n\nPrisma.validator = () => val => val;\n/**\n * Enums\n */\n// Based on\n// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275\n\n\nfunction makeEnum(x) {\n  return x;\n}\n\nexports.Prisma.AreaScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  requirementID: 'requirementID',\n  name: 'name'\n});\nexports.Prisma.AreaRequirementScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  nSubAreas: 'nSubAreas',\n  nCourses: 'nCourses',\n  nCredits: 'nCredits'\n});\nexports.Prisma.CommentsScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  GPDID: 'GPDID',\n  comment: 'comment',\n  date: 'date'\n});\nexports.Prisma.CourseScalarFieldEnum = makeEnum({\n  courseID: 'courseID',\n  departID: 'departID',\n  name: 'name',\n  description: 'description',\n  credits: 'credits',\n  courseNum: 'courseNum'\n});\nexports.Prisma.CourseOfferingScalarFieldEnum = makeEnum({\n  courseOfferingID: 'courseOfferingID',\n  courseID: 'courseID',\n  semester: 'semester',\n  year: 'year',\n  section: 'section'\n});\nexports.Prisma.CoursePlanScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  valid: 'valid',\n  complete: 'complete'\n});\nexports.Prisma.DegreeRequirementScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  departID: 'departID',\n  track: 'track',\n  versionSemester: 'versionSemester',\n  versionYear: 'versionYear',\n  totalCredit: 'totalCredit',\n  project: 'project',\n  thesis: 'thesis',\n  timeLimit: 'timeLimit',\n  finalRecommended: 'finalRecommended',\n  minGPA: 'minGPA'\n});\nexports.Prisma.DepartmentScalarFieldEnum = makeEnum({\n  departmentID: 'departmentID',\n  departmentName: 'departmentName'\n});\nexports.Prisma.ElectiveStatusScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  areaID: 'areaID',\n  status: 'status'\n});\nexports.Prisma.GPDScalarFieldEnum = makeEnum({\n  GPDID: 'GPDID',\n  departmentID: 'departmentID'\n});\nexports.Prisma.GradesScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  courseOfferingID: 'courseOfferingID',\n  grade: 'grade'\n});\nexports.Prisma.PrerequisiteScalarFieldEnum = makeEnum({\n  courseID: 'courseID',\n  prerequisiteID: 'prerequisiteID'\n});\nexports.Prisma.ProficiencyRequirementScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  courseID: 'courseID'\n});\nexports.Prisma.RequiredCourseScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  courseID: 'courseID'\n});\nexports.Prisma.RequiredStatusScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  courseID: 'courseID',\n  status: 'status'\n});\nexports.Prisma.StudentScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  firstName: 'firstName',\n  lastName: 'lastName',\n  requirementID: 'requirementID',\n  entrySemester: 'entrySemester',\n  entryYear: 'entryYear',\n  gradSemester: 'gradSemester',\n  gradYear: 'gradYear',\n  nSemestersInProgram: 'nSemestersInProgram',\n  gpa: 'gpa',\n  totalCredits: 'totalCredits',\n  projectOption: 'projectOption',\n  advisor: 'advisor',\n  hasGraduated: 'hasGraduated'\n});\nexports.Prisma.SubAreaScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  minCourses: 'minCourses',\n  minCredit: 'minCredit',\n  maxCredit: 'maxCredit',\n  maxCourse: 'maxCourse',\n  name: 'name'\n});\nexports.Prisma.TimeSlotDayScalarFieldEnum = makeEnum({\n  CourseOfferingID: 'CourseOfferingID',\n  day: 'day'\n});\nexports.Prisma.TimeSlotTimeScalarFieldEnum = makeEnum({\n  courseOfferingID: 'courseOfferingID',\n  startTime: 'startTime',\n  endTime: 'endTime'\n});\nexports.Prisma.UserScalarFieldEnum = makeEnum({\n  userID: 'userID',\n  username: 'username',\n  password: 'password'\n});\nexports.Prisma.SortOrder = makeEnum({\n  asc: 'asc',\n  desc: 'desc'\n});\nexports.CourseOffering_semester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\nexports.DegreeRequirement_versionSemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  SummerI: 'SummerI',\n  SummerII: 'SummerII'\n});\nexports.ElectiveStatus_status = makeEnum({\n  Satisfied: 'Satisfied',\n  Pending: 'Pending',\n  Unsatisfied: 'Unsatisfied'\n});\nexports.RequiredStatus_status = makeEnum({\n  Satisfied: 'Satisfied',\n  Pending: 'Pending',\n  Unsatisfied: 'Unsatisfied'\n});\nexports.Student_entrySemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\nexports.Student_gradSemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\nexports.TimeSlotDay_day = makeEnum({\n  Monday: 'Monday',\n  Tuesday: 'Tuesday',\n  Wednesday: 'Wednesday',\n  Thursday: 'Thursday',\n  Friday: 'Friday',\n  Saturday: 'Saturday',\n  Sunday: 'Sunday'\n});\nexports.Prisma.ModelName = makeEnum({\n  Area: 'Area',\n  AreaRequirement: 'AreaRequirement',\n  Comments: 'Comments',\n  Course: 'Course',\n  CourseOffering: 'CourseOffering',\n  CoursePlan: 'CoursePlan',\n  DegreeRequirement: 'DegreeRequirement',\n  Department: 'Department',\n  ElectiveStatus: 'ElectiveStatus',\n  GPD: 'GPD',\n  Grades: 'Grades',\n  prerequisite: 'prerequisite',\n  proficiencyRequirement: 'proficiencyRequirement',\n  requiredCourse: 'requiredCourse',\n  RequiredStatus: 'RequiredStatus',\n  Student: 'Student',\n  SubArea: 'SubArea',\n  TimeSlotDay: 'TimeSlotDay',\n  TimeSlotTime: 'TimeSlotTime',\n  User: 'User'\n});\n/**\n * Create the Client\n */\n\nclass PrismaClient {\n  constructor() {\n    throw new Error(`PrismaClient is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);\n  }\n\n}\n\nexports.PrismaClient = PrismaClient;\nObject.assign(exports, Prisma);","map":{"version":3,"sources":["/home/peter/Classes/cse416/MAST/node_modules/.prisma/client/index-browser.js"],"names":["Object","defineProperty","exports","value","Decimal","require","Prisma","prismaVersion","client","engine","PrismaClientKnownRequestError","Error","PrismaClientUnknownRequestError","PrismaClientRustPanicError","PrismaClientInitializationError","PrismaClientValidationError","sql","empty","join","raw","validator","val","makeEnum","x","AreaScalarFieldEnum","areaID","requirementID","name","AreaRequirementScalarFieldEnum","nSubAreas","nCourses","nCredits","CommentsScalarFieldEnum","studentID","GPDID","comment","date","CourseScalarFieldEnum","courseID","departID","description","credits","courseNum","CourseOfferingScalarFieldEnum","courseOfferingID","semester","year","section","CoursePlanScalarFieldEnum","valid","complete","DegreeRequirementScalarFieldEnum","track","versionSemester","versionYear","totalCredit","project","thesis","timeLimit","finalRecommended","minGPA","DepartmentScalarFieldEnum","departmentID","departmentName","ElectiveStatusScalarFieldEnum","status","GPDScalarFieldEnum","GradesScalarFieldEnum","grade","PrerequisiteScalarFieldEnum","prerequisiteID","ProficiencyRequirementScalarFieldEnum","RequiredCourseScalarFieldEnum","RequiredStatusScalarFieldEnum","StudentScalarFieldEnum","firstName","lastName","entrySemester","entryYear","gradSemester","gradYear","nSemestersInProgram","gpa","totalCredits","projectOption","advisor","hasGraduated","SubAreaScalarFieldEnum","minCourses","minCredit","maxCredit","maxCourse","TimeSlotDayScalarFieldEnum","CourseOfferingID","day","TimeSlotTimeScalarFieldEnum","startTime","endTime","UserScalarFieldEnum","userID","username","password","SortOrder","asc","desc","CourseOffering_semester","Fall","Winter","Spring","Summer1","Summer2","DegreeRequirement_versionSemester","SummerI","SummerII","ElectiveStatus_status","Satisfied","Pending","Unsatisfied","RequiredStatus_status","Student_entrySemester","Student_gradSemester","TimeSlotDay_day","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","ModelName","Area","AreaRequirement","Comments","Course","CourseOffering","CoursePlan","DegreeRequirement","Department","ElectiveStatus","GPD","Grades","prerequisite","proficiencyRequirement","requiredCourse","RequiredStatus","Student","SubArea","TimeSlotDay","TimeSlotTime","User","PrismaClient","constructor","assign"],"mappings":"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","sourcesContent":["\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst {\n  Decimal\n} = require('@prisma/client/runtime/index-browser')\n\n\nconst Prisma = {}\n\nexports.Prisma = Prisma\n\n/**\n * Prisma Client JS version: 2.19.0\n * Query Engine version: c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d\n */\nPrisma.prismaVersion = {\n  client: \"2.19.0\",\n  engine: \"c1455d0b443d66b0d9db9bcb1bb9ee0d5bbc511d\"\n}\n\nPrisma.PrismaClientKnownRequestError = () => {\n  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)};\nPrisma.PrismaClientUnknownRequestError = () => {\n  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.PrismaClientRustPanicError = () => {\n  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.PrismaClientInitializationError = () => {\n  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.PrismaClientValidationError = () => {\n  throw new Error(`PrismaClientValidationError is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.Decimal = Decimal\n\n/**\n * Re-export of sql-template-tag\n */\n\nPrisma.sql = () => {\n  throw new Error(`sqltag is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.empty = () => {\n  throw new Error(`empty is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.join = () => {\n  throw new Error(`join is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.raw = () => {\n  throw new Error(`raw is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n)}\nPrisma.validator = () => (val) => val\n\n/**\n * Enums\n */\n// Based on\n// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275\nfunction makeEnum(x) { return x; }\n\nexports.Prisma.AreaScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  requirementID: 'requirementID',\n  name: 'name'\n});\n\nexports.Prisma.AreaRequirementScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  nSubAreas: 'nSubAreas',\n  nCourses: 'nCourses',\n  nCredits: 'nCredits'\n});\n\nexports.Prisma.CommentsScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  GPDID: 'GPDID',\n  comment: 'comment',\n  date: 'date'\n});\n\nexports.Prisma.CourseScalarFieldEnum = makeEnum({\n  courseID: 'courseID',\n  departID: 'departID',\n  name: 'name',\n  description: 'description',\n  credits: 'credits',\n  courseNum: 'courseNum'\n});\n\nexports.Prisma.CourseOfferingScalarFieldEnum = makeEnum({\n  courseOfferingID: 'courseOfferingID',\n  courseID: 'courseID',\n  semester: 'semester',\n  year: 'year',\n  section: 'section'\n});\n\nexports.Prisma.CoursePlanScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  valid: 'valid',\n  complete: 'complete'\n});\n\nexports.Prisma.DegreeRequirementScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  departID: 'departID',\n  track: 'track',\n  versionSemester: 'versionSemester',\n  versionYear: 'versionYear',\n  totalCredit: 'totalCredit',\n  project: 'project',\n  thesis: 'thesis',\n  timeLimit: 'timeLimit',\n  finalRecommended: 'finalRecommended',\n  minGPA: 'minGPA'\n});\n\nexports.Prisma.DepartmentScalarFieldEnum = makeEnum({\n  departmentID: 'departmentID',\n  departmentName: 'departmentName'\n});\n\nexports.Prisma.ElectiveStatusScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  areaID: 'areaID',\n  status: 'status'\n});\n\nexports.Prisma.GPDScalarFieldEnum = makeEnum({\n  GPDID: 'GPDID',\n  departmentID: 'departmentID'\n});\n\nexports.Prisma.GradesScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  courseOfferingID: 'courseOfferingID',\n  grade: 'grade'\n});\n\nexports.Prisma.PrerequisiteScalarFieldEnum = makeEnum({\n  courseID: 'courseID',\n  prerequisiteID: 'prerequisiteID'\n});\n\nexports.Prisma.ProficiencyRequirementScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  courseID: 'courseID'\n});\n\nexports.Prisma.RequiredCourseScalarFieldEnum = makeEnum({\n  requirementID: 'requirementID',\n  courseID: 'courseID'\n});\n\nexports.Prisma.RequiredStatusScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  courseID: 'courseID',\n  status: 'status'\n});\n\nexports.Prisma.StudentScalarFieldEnum = makeEnum({\n  studentID: 'studentID',\n  firstName: 'firstName',\n  lastName: 'lastName',\n  requirementID: 'requirementID',\n  entrySemester: 'entrySemester',\n  entryYear: 'entryYear',\n  gradSemester: 'gradSemester',\n  gradYear: 'gradYear',\n  nSemestersInProgram: 'nSemestersInProgram',\n  gpa: 'gpa',\n  totalCredits: 'totalCredits',\n  projectOption: 'projectOption',\n  advisor: 'advisor',\n  hasGraduated: 'hasGraduated'\n});\n\nexports.Prisma.SubAreaScalarFieldEnum = makeEnum({\n  areaID: 'areaID',\n  minCourses: 'minCourses',\n  minCredit: 'minCredit',\n  maxCredit: 'maxCredit',\n  maxCourse: 'maxCourse',\n  name: 'name'\n});\n\nexports.Prisma.TimeSlotDayScalarFieldEnum = makeEnum({\n  CourseOfferingID: 'CourseOfferingID',\n  day: 'day'\n});\n\nexports.Prisma.TimeSlotTimeScalarFieldEnum = makeEnum({\n  courseOfferingID: 'courseOfferingID',\n  startTime: 'startTime',\n  endTime: 'endTime'\n});\n\nexports.Prisma.UserScalarFieldEnum = makeEnum({\n  userID: 'userID',\n  username: 'username',\n  password: 'password'\n});\n\nexports.Prisma.SortOrder = makeEnum({\n  asc: 'asc',\n  desc: 'desc'\n});\nexports.CourseOffering_semester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\n\nexports.DegreeRequirement_versionSemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  SummerI: 'SummerI',\n  SummerII: 'SummerII'\n});\n\nexports.ElectiveStatus_status = makeEnum({\n  Satisfied: 'Satisfied',\n  Pending: 'Pending',\n  Unsatisfied: 'Unsatisfied'\n});\n\nexports.RequiredStatus_status = makeEnum({\n  Satisfied: 'Satisfied',\n  Pending: 'Pending',\n  Unsatisfied: 'Unsatisfied'\n});\n\nexports.Student_entrySemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\n\nexports.Student_gradSemester = makeEnum({\n  Fall: 'Fall',\n  Winter: 'Winter',\n  Spring: 'Spring',\n  Summer1: 'Summer1',\n  Summer2: 'Summer2'\n});\n\nexports.TimeSlotDay_day = makeEnum({\n  Monday: 'Monday',\n  Tuesday: 'Tuesday',\n  Wednesday: 'Wednesday',\n  Thursday: 'Thursday',\n  Friday: 'Friday',\n  Saturday: 'Saturday',\n  Sunday: 'Sunday'\n});\n\nexports.Prisma.ModelName = makeEnum({\n  Area: 'Area',\n  AreaRequirement: 'AreaRequirement',\n  Comments: 'Comments',\n  Course: 'Course',\n  CourseOffering: 'CourseOffering',\n  CoursePlan: 'CoursePlan',\n  DegreeRequirement: 'DegreeRequirement',\n  Department: 'Department',\n  ElectiveStatus: 'ElectiveStatus',\n  GPD: 'GPD',\n  Grades: 'Grades',\n  prerequisite: 'prerequisite',\n  proficiencyRequirement: 'proficiencyRequirement',\n  requiredCourse: 'requiredCourse',\n  RequiredStatus: 'RequiredStatus',\n  Student: 'Student',\n  SubArea: 'SubArea',\n  TimeSlotDay: 'TimeSlotDay',\n  TimeSlotTime: 'TimeSlotTime',\n  User: 'User'\n});\n\n/**\n * Create the Client\n */\nclass PrismaClient {\n  constructor() {\n    throw new Error(\n      `PrismaClient is unable to be run in the browser.\nIn case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,\n    )\n  }\n}\nexports.PrismaClient = PrismaClient\n\nObject.assign(exports, Prisma)\n"]},"metadata":{},"sourceType":"script"}